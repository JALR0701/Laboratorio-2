

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Feb 01 22:05:09 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.10
    14                           ; Generated 31/07/2019 GMT
    15                           ; 
    16                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008F                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  0105                     	;# 
   111  0107                     	;# 
   112  0108                     	;# 
   113  0109                     	;# 
   114  010C                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0185                     	;# 
   120  0187                     	;# 
   121  0188                     	;# 
   122  0189                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0088                     	;# 
   165  0089                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  008F                     	;# 
   170  0090                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0095                     	;# 
   178  0096                     	;# 
   179  0097                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009A                     	;# 
   183  009B                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  0105                     	;# 
   189  0107                     	;# 
   190  0108                     	;# 
   191  0109                     	;# 
   192  010C                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  0185                     	;# 
   198  0187                     	;# 
   199  0188                     	;# 
   200  0189                     	;# 
   201  018C                     	;# 
   202  018D                     	;# 
   203                           
   204                           	psect	strings
   205  0092                     __pstrings:	
   206  0092                     stringtab:	
   207  0092                     __stringtab:	
   208  0092                     stringcode:	
   209                           ;	String table - string pointers are 1 byte each
   210                           
   211  0092                     stringdir:	
   212  0092  3000               	movlw	high stringdir
   213  0093  008A               	movwf	10
   214  0094  0804               	movf	4,w
   215  0095  0A84               	incf	4,f
   216  0096  0782               	addwf	2,f
   217  0097                     __stringbase:	
   218  0097  3400               	retlw	0
   219  0098                     __end_of__stringtab:	
   220  0098                     _SEGMENT_MAP:	
   221  0098  343F               	retlw	63
   222  0099  3406               	retlw	6
   223  009A  345B               	retlw	91
   224  009B  344F               	retlw	79
   225  009C  3466               	retlw	102
   226  009D  346D               	retlw	109
   227  009E  347D               	retlw	125
   228  009F  3407               	retlw	7
   229  00A0  347F               	retlw	127
   230  00A1  346F               	retlw	111
   231  00A2  3477               	retlw	119
   232  00A3  347C               	retlw	124
   233  00A4  3439               	retlw	57
   234  00A5  345E               	retlw	94
   235  00A6  3479               	retlw	121
   236  00A7  3471               	retlw	113
   237  00A8                     __end_of_SEGMENT_MAP:	
   238  0008                     _PORTDbits	set	8
   239  0008                     _PORTD	set	8
   240  0007                     _PORTC	set	7
   241  0006                     _PORTB	set	6
   242  000B                     _INTCON	set	11
   243  0005                     _PORTA	set	5
   244  0006                     _PORTBbits	set	6
   245  0001                     _TMR0	set	1
   246  000B                     _INTCONbits	set	11
   247  0096                     _IOCBbits	set	150
   248  0096                     _IOCB	set	150
   249  0081                     _OPTION_REG	set	129
   250  0088                     _TRISD	set	136
   251  0087                     _TRISC	set	135
   252  0086                     _TRISBbits	set	134
   253  0086                     _TRISB	set	134
   254  0085                     _TRISA	set	133
   255  0189                     _ANSELH	set	393
   256  0188                     _ANSEL	set	392
   257                           
   258                           ; #config settings
   259  0000                     
   260                           	psect	cinit
   261  000F                     start_initialization:	
   262  000F                     __initialization:	
   263                           
   264                           ; Clear objects allocated to COMMON
   265  000F  01F3               	clrf	__pbssCOMMON& (0+127)
   266  0010                     end_of_initialization:	
   267                           ;End of C runtime variable initialization code
   268                           
   269  0010                     __end_of__initialization:	
   270  0010  0183               	clrf	3
   271  0011  120A  118A  2814   	ljmp	_main	;jump to C main() function
   272                           
   273                           	psect	bssCOMMON
   274  0073                     __pbssCOMMON:	
   275  0073                     _change:	
   276  0073                     	ds	1
   277                           
   278                           	psect	cstackCOMMON
   279  0070                     __pcstackCOMMON:	
   280  0070                     ?_ISR:	
   281  0070                     ??_ISR:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  0070                     ?_main:	
   285                           ; 1 bytes @ 0x0
   286                           
   287                           
   288                           ; 1 bytes @ 0x0
   289  0070                     	ds	3
   290  0073                     ??_main:	
   291                           
   292                           	psect	maintext
   293  0014                     __pmaintext:	
   294                           ; 1 bytes @ 0x3
   295 ;;
   296 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   297 ;;
   298 ;; *************** function _main *****************
   299 ;; Defined at:
   300 ;;		line 59 in file "ADC.c"
   301 ;; Parameters:    Size  Location     Type
   302 ;;		None
   303 ;; Auto vars:     Size  Location     Type
   304 ;;		None
   305 ;; Return value:  Size  Location     Type
   306 ;;                  1    wreg      void 
   307 ;; Registers used:
   308 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   309 ;; Tracked objects:
   310 ;;		On entry : B00/0
   311 ;;		On exit  : 0/0
   312 ;;		Unchanged: 0/0
   313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   314 ;;      Params:         0       0       0       0       0
   315 ;;      Locals:         0       0       0       0       0
   316 ;;      Temps:          0       0       0       0       0
   317 ;;      Totals:         0       0       0       0       0
   318 ;;Total ram usage:        0 bytes
   319 ;; Hardware stack levels used:    1
   320 ;; Hardware stack levels required when called:    1
   321 ;; This function calls:
   322 ;;		Nothing
   323 ;; This function is called by:
   324 ;;		Startup code after reset
   325 ;; This function uses a non-reentrant model
   326 ;;
   327                           
   328                           
   329                           ;psect for function _main
   330  0014                     _main:	
   331  0014                     l729:	
   332                           ;incstack = 0
   333                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath]
   334                           
   335                           
   336                           ;ADC.c: 60:     TRISA = 0;
   337  0014  1683               	bsf	3,5	;RP0=1, select bank1
   338  0015  1303               	bcf	3,6	;RP1=0, select bank1
   339  0016  0185               	clrf	5	;volatile
   340                           
   341                           ;ADC.c: 61:     TRISB = 0;
   342  0017  0186               	clrf	6	;volatile
   343  0018                     l731:	
   344                           
   345                           ;ADC.c: 62:     TRISBbits.TRISB0 = 1;
   346  0018  1406               	bsf	6,0	;volatile
   347  0019                     l733:	
   348                           
   349                           ;ADC.c: 63:     TRISBbits.TRISB1 = 1;
   350  0019  1486               	bsf	6,1	;volatile
   351                           
   352                           ;ADC.c: 64:     TRISC = 0;
   353  001A  0187               	clrf	7	;volatile
   354                           
   355                           ;ADC.c: 65:     TRISD = 0;
   356  001B  0188               	clrf	8	;volatile
   357                           
   358                           ;ADC.c: 67:     ANSEL = 0;
   359  001C  1683               	bsf	3,5	;RP0=1, select bank3
   360  001D  1703               	bsf	3,6	;RP1=1, select bank3
   361  001E  0188               	clrf	8	;volatile
   362                           
   363                           ;ADC.c: 68:     ANSELH = 0;
   364  001F  0189               	clrf	9	;volatile
   365                           
   366                           ;ADC.c: 70:     INTCON = 0;
   367  0020  018B               	clrf	11	;volatile
   368  0021                     l735:	
   369                           
   370                           ;ADC.c: 71:     INTCONbits.GIE = 1;
   371  0021  178B               	bsf	11,7	;volatile
   372  0022                     l737:	
   373                           
   374                           ;ADC.c: 72:     INTCONbits.RBIE = 1;
   375  0022  158B               	bsf	11,3	;volatile
   376  0023                     l739:	
   377                           
   378                           ;ADC.c: 73:     INTCONbits.RBIF = 0;
   379  0023  100B               	bcf	11,0	;volatile
   380  0024                     l741:	
   381                           
   382                           ;ADC.c: 74:     INTCONbits.T0IE = 1;
   383  0024  168B               	bsf	11,5	;volatile
   384  0025                     l743:	
   385                           
   386                           ;ADC.c: 75:     INTCONbits.T0IF = 0;
   387  0025  110B               	bcf	11,2	;volatile
   388                           
   389                           ;ADC.c: 77:     OPTION_REG = 0;
   390  0026  1683               	bsf	3,5	;RP0=1, select bank1
   391  0027  1303               	bcf	3,6	;RP1=0, select bank1
   392  0028  0181               	clrf	1	;volatile
   393  0029                     l745:	
   394                           
   395                           ;ADC.c: 79:     TMR0 = 4;
   396  0029  3004               	movlw	4
   397  002A  1283               	bcf	3,5	;RP0=0, select bank0
   398  002B  1303               	bcf	3,6	;RP1=0, select bank0
   399  002C  0081               	movwf	1	;volatile
   400  002D                     l747:	
   401                           
   402                           ;ADC.c: 81:     IOCB = 0;
   403  002D  1683               	bsf	3,5	;RP0=1, select bank1
   404  002E  1303               	bcf	3,6	;RP1=0, select bank1
   405  002F  0196               	clrf	22	;volatile
   406  0030                     l749:	
   407                           
   408                           ;ADC.c: 82:     IOCBbits.IOCB0 = 1;
   409  0030  1416               	bsf	22,0	;volatile
   410  0031                     l751:	
   411                           
   412                           ;ADC.c: 83:     IOCBbits.IOCB1 = 1;
   413  0031  1496               	bsf	22,1	;volatile
   414  0032                     l753:	
   415                           
   416                           ;ADC.c: 85:     PORTA = 0;
   417  0032  1283               	bcf	3,5	;RP0=0, select bank0
   418  0033  1303               	bcf	3,6	;RP1=0, select bank0
   419  0034  0185               	clrf	5	;volatile
   420  0035                     l755:	
   421                           
   422                           ;ADC.c: 86:     PORTB = 0;
   423  0035  0186               	clrf	6	;volatile
   424  0036                     l757:	
   425                           
   426                           ;ADC.c: 87:     PORTC = 0;
   427  0036  0187               	clrf	7	;volatile
   428  0037                     l759:	
   429                           
   430                           ;ADC.c: 88:     PORTD = 0;
   431  0037  0188               	clrf	8	;volatile
   432  0038                     l761:	
   433                           
   434                           ;ADC.c: 91:         if(change == 1){
   435  0038  0373               	decf	_change,w
   436  0039  1D03               	btfss	3,2
   437  003A  283C               	goto	u81
   438  003B  283D               	goto	u80
   439  003C                     u81:	
   440  003C  2838               	goto	l761
   441  003D                     u80:	
   442  003D                     l763:	
   443                           
   444                           ;ADC.c: 92:             if(PORTDbits.RD0 == 1){
   445  003D  1283               	bcf	3,5	;RP0=0, select bank0
   446  003E  1303               	bcf	3,6	;RP1=0, select bank0
   447  003F  1C08               	btfss	8,0	;volatile
   448  0040  2842               	goto	u91
   449  0041  2843               	goto	u90
   450  0042                     u91:	
   451  0042  284F               	goto	l57
   452  0043                     u90:	
   453  0043                     l765:	
   454                           
   455                           ;ADC.c: 93:                 PORTDbits.RD0 = 0;
   456  0043  1008               	bcf	8,0	;volatile
   457                           
   458                           ;ADC.c: 94:                 PORTDbits.RD1 = 0;
   459  0044  1088               	bcf	8,1	;volatile
   460  0045                     l767:	
   461                           
   462                           ;ADC.c: 95:                 PORTC = SEGMENT_MAP[10];
   463  0045  300B               	movlw	low (((_SEGMENT_MAP+10)-__stringbase)| (0+32768))
   464  0046  0084               	movwf	4
   465  0047  120A  118A  2092  120A  118A  	fcall	stringdir
   466  004C  0087               	movwf	7	;volatile
   467  004D                     l769:	
   468                           
   469                           ;ADC.c: 96:                 PORTDbits.RD1 = 1;
   470  004D  1488               	bsf	8,1	;volatile
   471                           
   472                           ;ADC.c: 97:             }else {
   473  004E  285A               	goto	l775
   474  004F                     l57:	
   475                           
   476                           ;ADC.c: 98:                 PORTDbits.RD1 = 0;
   477  004F  1088               	bcf	8,1	;volatile
   478                           
   479                           ;ADC.c: 99:                 PORTDbits.RD0 = 0;
   480  0050  1008               	bcf	8,0	;volatile
   481  0051                     l771:	
   482                           
   483                           ;ADC.c: 100:                 PORTC = SEGMENT_MAP[11];
   484  0051  300C               	movlw	low (((_SEGMENT_MAP+11)-__stringbase)| (0+32768))
   485  0052  0084               	movwf	4
   486  0053  120A  118A  2092  120A  118A  	fcall	stringdir
   487  0058  0087               	movwf	7	;volatile
   488  0059                     l773:	
   489                           
   490                           ;ADC.c: 101:                 PORTDbits.RD0 = 1;
   491  0059  1408               	bsf	8,0	;volatile
   492  005A                     l775:	
   493                           
   494                           ;ADC.c: 103:             change = 0;
   495  005A  01F3               	clrf	_change
   496  005B  2838               	goto	l761
   497  005C  120A  118A  280C   	ljmp	start
   498  005F                     __end_of_main:	
   499                           
   500                           	psect	text1
   501  005F                     __ptext1:	
   502 ;; *************** function _ISR *****************
   503 ;; Defined at:
   504 ;;		line 38 in file "ADC.c"
   505 ;; Parameters:    Size  Location     Type
   506 ;;		None
   507 ;; Auto vars:     Size  Location     Type
   508 ;;		None
   509 ;; Return value:  Size  Location     Type
   510 ;;                  1    wreg      void 
   511 ;; Registers used:
   512 ;;		wreg, status,2, status,0
   513 ;; Tracked objects:
   514 ;;		On entry : 0/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   518 ;;      Params:         0       0       0       0       0
   519 ;;      Locals:         0       0       0       0       0
   520 ;;      Temps:          3       0       0       0       0
   521 ;;      Totals:         3       0       0       0       0
   522 ;;Total ram usage:        3 bytes
   523 ;; Hardware stack levels used:    1
   524 ;; This function calls:
   525 ;;		Nothing
   526 ;; This function is called by:
   527 ;;		Interrupt level 1
   528 ;; This function uses a non-reentrant model
   529 ;;
   530                           
   531                           
   532                           ;psect for function _ISR
   533  005F                     _ISR:	
   534  005F                     i1l653:	
   535                           
   536                           ;ADC.c: 39:     INTCONbits.GIE = 0;
   537  005F  138B               	bcf	11,7	;volatile
   538                           
   539                           ;ADC.c: 40:     INTCONbits.RBIE = 0;
   540  0060  118B               	bcf	11,3	;volatile
   541                           
   542                           ;ADC.c: 41:     INTCONbits.T0IE = 0;
   543  0061  128B               	bcf	11,5	;volatile
   544                           
   545                           ;ADC.c: 42:     if(INTCONbits.T0IF == 1){
   546  0062  1D0B               	btfss	11,2	;volatile
   547  0063  2865               	goto	u1_21
   548  0064  2866               	goto	u1_20
   549  0065                     u1_21:	
   550  0065  286C               	goto	i1l659
   551  0066                     u1_20:	
   552  0066                     i1l655:	
   553                           
   554                           ;ADC.c: 43:         TMR0 = 4;
   555  0066  3004               	movlw	4
   556  0067  1283               	bcf	3,5	;RP0=0, select bank0
   557  0068  1303               	bcf	3,6	;RP1=0, select bank0
   558  0069  0081               	movwf	1	;volatile
   559  006A                     i1l657:	
   560                           
   561                           ;ADC.c: 44:         change = 1;
   562  006A  01F3               	clrf	_change
   563  006B  0AF3               	incf	_change,f
   564  006C                     i1l659:	
   565                           
   566                           ;ADC.c: 46:     if(INTCONbits.RBIF == 1 && PORTBbits.RB0 == 1){
   567  006C  1C0B               	btfss	11,0	;volatile
   568  006D  286F               	goto	u2_21
   569  006E  2870               	goto	u2_20
   570  006F                     u2_21:	
   571  006F  287A               	goto	i1l665
   572  0070                     u2_20:	
   573  0070                     i1l661:	
   574  0070  1283               	bcf	3,5	;RP0=0, select bank0
   575  0071  1303               	bcf	3,6	;RP1=0, select bank0
   576  0072  1C06               	btfss	6,0	;volatile
   577  0073  2875               	goto	u3_21
   578  0074  2876               	goto	u3_20
   579  0075                     u3_21:	
   580  0075  287A               	goto	i1l665
   581  0076                     u3_20:	
   582  0076                     i1l663:	
   583                           
   584                           ;ADC.c: 47:         PORTA++;
   585  0076  3001               	movlw	1
   586  0077  00F0               	movwf	??_ISR
   587  0078  0870               	movf	??_ISR,w
   588  0079  0785               	addwf	5,f	;volatile
   589  007A                     i1l665:	
   590                           
   591                           ;ADC.c: 49:     if(INTCONbits.RBIF == 1 && PORTBbits.RB1 == 1){
   592  007A  1C0B               	btfss	11,0	;volatile
   593  007B  287D               	goto	u4_21
   594  007C  287E               	goto	u4_20
   595  007D                     u4_21:	
   596  007D  2886               	goto	i1l671
   597  007E                     u4_20:	
   598  007E                     i1l667:	
   599  007E  1283               	bcf	3,5	;RP0=0, select bank0
   600  007F  1303               	bcf	3,6	;RP1=0, select bank0
   601  0080  1C86               	btfss	6,1	;volatile
   602  0081  2883               	goto	u5_21
   603  0082  2884               	goto	u5_20
   604  0083                     u5_21:	
   605  0083  2886               	goto	i1l671
   606  0084                     u5_20:	
   607  0084                     i1l669:	
   608                           
   609                           ;ADC.c: 50:         PORTA--;
   610  0084  3001               	movlw	1
   611  0085  0285               	subwf	5,f	;volatile
   612  0086                     i1l671:	
   613                           
   614                           ;ADC.c: 52:     INTCONbits.GIE = 1;
   615  0086  178B               	bsf	11,7	;volatile
   616  0087                     i1l673:	
   617                           
   618                           ;ADC.c: 53:     INTCONbits.RBIE = 1;
   619  0087  158B               	bsf	11,3	;volatile
   620  0088                     i1l675:	
   621                           
   622                           ;ADC.c: 54:     INTCONbits.RBIF = 0;
   623  0088  100B               	bcf	11,0	;volatile
   624  0089                     i1l677:	
   625                           
   626                           ;ADC.c: 55:     INTCONbits.T0IE = 1;
   627  0089  168B               	bsf	11,5	;volatile
   628  008A                     i1l679:	
   629                           
   630                           ;ADC.c: 56:     INTCONbits.T0IF = 0;
   631  008A  110B               	bcf	11,2	;volatile
   632  008B                     i1l50:	
   633  008B  0872               	movf	??_ISR+2,w
   634  008C  008A               	movwf	10
   635  008D  0E71               	swapf	(??_ISR+1)^(0+4294967168),w
   636  008E  0083               	movwf	3
   637  008F  0EFE               	swapf	btemp,f
   638  0090  0E7E               	swapf	btemp,w
   639  0091  0009               	retfie
   640  0092                     __end_of_ISR:	
   641  007E                     btemp	set	126	;btemp
   642  007E                     wtemp0	set	126
   643                           
   644                           	psect	intentry
   645  0004                     __pintentry:	
   646                           ;incstack = 0
   647                           ; Regs used in _ISR: [wreg+status,2+status,0]
   648                           
   649  0004                     interrupt_function:	
   650  007E                     saved_w	set	btemp
   651  0004  00FE               	movwf	btemp
   652  0005  0E03               	swapf	3,w
   653  0006  00F1               	movwf	??_ISR+1
   654  0007  080A               	movf	10,w
   655  0008  00F2               	movwf	??_ISR+2
   656  0009  120A  118A  285F   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Feb 01 22:05:09 2020

                       pc 0002               __CFG_CP$OFF 0000                        l57 004F  
                      u80 003D                        u81 003C                        u90 0043  
                      u91 0042                        fsr 0004                       l731 0018  
                     l741 0024                       l733 0019                       l751 0031  
                     l743 0025                       l735 0021                       l761 0038  
                     l753 0032                       l745 0029                       l737 0022  
                     l729 0014                       l771 0051                       l763 003D  
                     l755 0035                       l747 002D                       l739 0023  
                     l773 0059                       l765 0043                       l757 0036  
                     l749 0030                       l775 005A                       l767 0045  
                     l759 0037                       l769 004D              __CFG_CPD$OFF 0000  
                     _ISR 005F                       fsr0 0004              __CFG_LVP$OFF 0000  
                    ?_ISR 0070                      _IOCB 0096                      i1l50 008B  
                    _TMR0 0001                      u1_20 0066                      u1_21 0065  
                    u2_20 0070                      u2_21 006F                      u3_20 0076  
                    u3_21 0075                      u4_20 007E                      u4_21 007D  
                    u5_20 0084                      u5_21 0083              __CFG_WRT$OFF 0000  
                    _main 0014                      btemp 007E                      start 000C  
           __CFG_IESO$OFF 0000                     ??_ISR 0070                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     i1l661 0070  
                   i1l653 005F                     i1l671 0086                     i1l663 0076  
                   i1l655 0066                     i1l673 0087                     i1l665 007A  
                   i1l657 006A                     i1l675 0088                     i1l667 007E  
                   i1l659 006C                     i1l677 0089                     i1l669 0084  
                   i1l679 008A                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
          __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 005F                    ??_main 0073  
                  _ANSELH 0189                    _INTCON 000B            __CFG_PWRTE$OFF 0000  
                  _change 0073                    saved_w 007E   __end_of__initialization 0010  
          __pcstackCOMMON 0070                __pmaintext 0014                __pintentry 0004  
              __stringtab 0092                   __ptext1 005F              __size_of_ISR 0033  
    end_of_initialization 0010                 _PORTBbits 0006                 _PORTDbits 0008  
               _TRISBbits 0086       start_initialization 000F               __end_of_ISR 0092  
__CFG_FOSC$INTRC_NOCLKOUT 0000               __pbssCOMMON 0073                 ___latbits 0002  
               __pstrings 0092       __end_of_SEGMENT_MAP 00A8         interrupt_function 0004  
                _IOCBbits 0096               __stringbase 0097        __end_of__stringtab 0098  
             _SEGMENT_MAP 0098         __CFG_BOR4V$BOR40V 0000             __size_of_main 004B  
              _INTCONbits 000B                  intlevel1 0000                 stringcode 0092  
              _OPTION_REG 0081                  stringdir 0092                  stringtab 0092  
