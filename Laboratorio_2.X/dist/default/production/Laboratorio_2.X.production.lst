

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 03 13:15:34 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.10
    15                           ; Generated 31/07/2019 GMT
    16                           ; 
    17                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001D                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  0081                     	;# 
   240  0085                     	;# 
   241  0086                     	;# 
   242  0087                     	;# 
   243  0088                     	;# 
   244  0089                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  008E                     	;# 
   248  008F                     	;# 
   249  0090                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0093                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0094                     	;# 
   256  0095                     	;# 
   257  0096                     	;# 
   258  0097                     	;# 
   259  0098                     	;# 
   260  0099                     	;# 
   261  009A                     	;# 
   262  009B                     	;# 
   263  009C                     	;# 
   264  009D                     	;# 
   265  009E                     	;# 
   266  009F                     	;# 
   267  0105                     	;# 
   268  0107                     	;# 
   269  0108                     	;# 
   270  0109                     	;# 
   271  010C                     	;# 
   272  010C                     	;# 
   273  010D                     	;# 
   274  010E                     	;# 
   275  010F                     	;# 
   276  0185                     	;# 
   277  0187                     	;# 
   278  0188                     	;# 
   279  0189                     	;# 
   280  018C                     	;# 
   281  018D                     	;# 
   282                           
   283                           	psect	strings
   284  00AF                     __pstrings:	
   285  00AF                     stringtab:	
   286  00AF                     __stringtab:	
   287  00AF                     stringcode:	
   288                           ;	String table - string pointers are 1 byte each
   289                           
   290  00AF                     stringdir:	
   291  00AF  3000               	movlw	high stringdir
   292  00B0  008A               	movwf	10
   293  00B1  0804               	movf	4,w
   294  00B2  0A84               	incf	4,f
   295  00B3  0782               	addwf	2,f
   296  00B4                     __stringbase:	
   297  00B4  3400               	retlw	0
   298  00B5                     __end_of__stringtab:	
   299  00B5                     initMultiplex@SEGMENT_MAP:	
   300  00B5  343F               	retlw	63
   301  00B6  3406               	retlw	6
   302  00B7  345B               	retlw	91
   303  00B8  344F               	retlw	79
   304  00B9  3466               	retlw	102
   305  00BA  346D               	retlw	109
   306  00BB  347D               	retlw	125
   307  00BC  3407               	retlw	7
   308  00BD  347F               	retlw	127
   309  00BE  346F               	retlw	111
   310  00BF  3477               	retlw	119
   311  00C0  347C               	retlw	124
   312  00C1  3439               	retlw	57
   313  00C2  345E               	retlw	94
   314  00C3  3479               	retlw	121
   315  00C4  3471               	retlw	113
   316  00C5                     __end_ofinitMultiplex@SEGMENT_MAP:	
   317  0008                     _PORTDbits	set	8
   318  0008                     _PORTD	set	8
   319  0007                     _PORTC	set	7
   320  0006                     _PORTB	set	6
   321  0005                     _PORTA	set	5
   322  000B                     _INTCON	set	11
   323  0006                     _PORTBbits	set	6
   324  0001                     _TMR0	set	1
   325  000B                     _INTCONbits	set	11
   326  0096                     _IOCBbits	set	150
   327  0096                     _IOCB	set	150
   328  0081                     _OPTION_REGbits	set	129
   329  0081                     _OPTION_REG	set	129
   330  0088                     _TRISD	set	136
   331  0087                     _TRISC	set	135
   332  0086                     _TRISBbits	set	134
   333  0086                     _TRISB	set	134
   334  0085                     _TRISA	set	133
   335  0189                     _ANSELH	set	393
   336  0188                     _ANSEL	set	392
   337                           
   338                           ; #config settings
   339  0000                     
   340                           	psect	cinit
   341  000F                     start_initialization:	
   342  000F                     __initialization:	
   343                           
   344                           ; Clear objects allocated to COMMON
   345  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   346  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   347  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   348  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   349  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   350  0014                     end_of_initialization:	
   351                           ;End of C runtime variable initialization code
   352                           
   353  0014                     __end_of__initialization:	
   354  0014  0183               	clrf	3
   355  0015  120A  118A  2818   	ljmp	_main	;jump to C main() function
   356                           
   357                           	psect	bssCOMMON
   358  0070                     __pbssCOMMON:	
   359  0070                     _contador1:	
   360  0070                     	ds	2
   361  0072                     _numero_:	
   362  0072                     	ds	2
   363  0074                     _change:	
   364  0074                     	ds	1
   365                           
   366                           	psect	cstackCOMMON
   367  0075                     __pcstackCOMMON:	
   368  0075                     ?_ISR:	
   369  0075                     ??_ISR:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0075                     ?_main:	
   373                           ; 1 bytes @ 0x0
   374                           
   375                           
   376                           ; 1 bytes @ 0x0
   377  0075                     	ds	2
   378  0077                     ?_initMultiplex:	
   379  0077                     initMultiplex@valor:	
   380                           ; 1 bytes @ 0x2
   381                           
   382                           
   383                           ; 2 bytes @ 0x2
   384  0077                     	ds	2
   385  0079                     ??_initMultiplex:	
   386  0079                     ??_main:	
   387                           ; 1 bytes @ 0x4
   388                           
   389                           
   390                           	psect	maintext
   391  0018                     __pmaintext:	
   392                           ; 1 bytes @ 0x4
   393 ;;
   394 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   395 ;;
   396 ;; *************** function _main *****************
   397 ;; Defined at:
   398 ;;		line 60 in file "ADC.c"
   399 ;; Parameters:    Size  Location     Type
   400 ;;		None
   401 ;; Auto vars:     Size  Location     Type
   402 ;;		None
   403 ;; Return value:  Size  Location     Type
   404 ;;                  1    wreg      void 
   405 ;; Registers used:
   406 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   407 ;; Tracked objects:
   408 ;;		On entry : B00/0
   409 ;;		On exit  : 0/0
   410 ;;		Unchanged: 0/0
   411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   412 ;;      Params:         0       0       0       0       0
   413 ;;      Locals:         0       0       0       0       0
   414 ;;      Temps:          0       0       0       0       0
   415 ;;      Totals:         0       0       0       0       0
   416 ;;Total ram usage:        0 bytes
   417 ;; Hardware stack levels required when called:    3
   418 ;; This function calls:
   419 ;;		_initMultiplex
   420 ;; This function is called by:
   421 ;;		Startup code after reset
   422 ;; This function uses a non-reentrant model
   423 ;;
   424                           
   425                           
   426                           ;psect for function _main
   427  0018                     _main:	
   428  0018                     l766:	
   429                           ;incstack = 0
   430                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   431                           
   432                           
   433                           ;ADC.c: 61:     TRISA = 0;
   434  0018  1683               	bsf	3,5	;RP0=1, select bank1
   435  0019  1303               	bcf	3,6	;RP1=0, select bank1
   436  001A  0185               	clrf	5	;volatile
   437                           
   438                           ;ADC.c: 62:     TRISB = 0;
   439  001B  0186               	clrf	6	;volatile
   440  001C                     l768:	
   441                           
   442                           ;ADC.c: 63:     TRISBbits.TRISB0 = 1;
   443  001C  1406               	bsf	6,0	;volatile
   444  001D                     l770:	
   445                           
   446                           ;ADC.c: 64:     TRISBbits.TRISB1 = 1;
   447  001D  1486               	bsf	6,1	;volatile
   448                           
   449                           ;ADC.c: 65:     TRISC = 0;
   450  001E  0187               	clrf	7	;volatile
   451                           
   452                           ;ADC.c: 66:     TRISD = 0;
   453  001F  0188               	clrf	8	;volatile
   454                           
   455                           ;ADC.c: 68:     ANSEL = 0;
   456  0020  1683               	bsf	3,5	;RP0=1, select bank3
   457  0021  1703               	bsf	3,6	;RP1=1, select bank3
   458  0022  0188               	clrf	8	;volatile
   459                           
   460                           ;ADC.c: 69:     ANSELH = 0;
   461  0023  0189               	clrf	9	;volatile
   462                           
   463                           ;ADC.c: 71:     INTCON = 0;
   464  0024  018B               	clrf	11	;volatile
   465  0025                     l772:	
   466                           
   467                           ;ADC.c: 72:     INTCONbits.GIE = 1;
   468  0025  178B               	bsf	11,7	;volatile
   469  0026                     l774:	
   470                           
   471                           ;ADC.c: 73:     INTCONbits.RBIE = 1;
   472  0026  158B               	bsf	11,3	;volatile
   473  0027                     l776:	
   474                           
   475                           ;ADC.c: 74:     INTCONbits.RBIF = 0;
   476  0027  100B               	bcf	11,0	;volatile
   477  0028                     l778:	
   478                           
   479                           ;ADC.c: 75:     INTCONbits.T0IE = 1;
   480  0028  168B               	bsf	11,5	;volatile
   481  0029                     l780:	
   482                           
   483                           ;ADC.c: 76:     INTCONbits.T0IF = 0;
   484  0029  110B               	bcf	11,2	;volatile
   485                           
   486                           ;ADC.c: 78:     OPTION_REG = 0;
   487  002A  1683               	bsf	3,5	;RP0=1, select bank1
   488  002B  1303               	bcf	3,6	;RP1=0, select bank1
   489  002C  0181               	clrf	1	;volatile
   490  002D                     l782:	
   491                           
   492                           ;ADC.c: 79:     OPTION_REGbits.PS2 = 1;
   493  002D  1501               	bsf	1,2	;volatile
   494  002E                     l784:	
   495                           
   496                           ;ADC.c: 81:     TMR0 = 99;
   497  002E  3063               	movlw	99
   498  002F  1283               	bcf	3,5	;RP0=0, select bank0
   499  0030  1303               	bcf	3,6	;RP1=0, select bank0
   500  0031  0081               	movwf	1	;volatile
   501  0032                     l786:	
   502                           
   503                           ;ADC.c: 83:     IOCB = 0;
   504  0032  1683               	bsf	3,5	;RP0=1, select bank1
   505  0033  1303               	bcf	3,6	;RP1=0, select bank1
   506  0034  0196               	clrf	22	;volatile
   507  0035                     l788:	
   508                           
   509                           ;ADC.c: 84:     IOCBbits.IOCB0 = 1;
   510  0035  1416               	bsf	22,0	;volatile
   511  0036                     l790:	
   512                           
   513                           ;ADC.c: 85:     IOCBbits.IOCB1 = 1;
   514  0036  1496               	bsf	22,1	;volatile
   515  0037                     l792:	
   516                           
   517                           ;ADC.c: 87:     PORTA = 0;
   518  0037  1283               	bcf	3,5	;RP0=0, select bank0
   519  0038  1303               	bcf	3,6	;RP1=0, select bank0
   520  0039  0185               	clrf	5	;volatile
   521  003A                     l794:	
   522                           
   523                           ;ADC.c: 88:     PORTB = 0;
   524  003A  0186               	clrf	6	;volatile
   525  003B                     l796:	
   526                           
   527                           ;ADC.c: 89:     PORTC = 0;
   528  003B  0187               	clrf	7	;volatile
   529  003C                     l798:	
   530                           
   531                           ;ADC.c: 90:     PORTD = 0;
   532  003C  0188               	clrf	8	;volatile
   533  003D                     l800:	
   534                           
   535                           ;ADC.c: 91:     PORTDbits.RD1 = 1;
   536  003D  1488               	bsf	8,1	;volatile
   537  003E                     l802:	
   538                           
   539                           ;ADC.c: 93:     contador1 = 0;
   540  003E  01F0               	clrf	_contador1
   541  003F  01F1               	clrf	_contador1+1
   542  0040                     l804:	
   543                           
   544                           ;ADC.c: 96:         if(change == 1){
   545  0040  0374               	decf	_change,w
   546  0041  1D03               	btfss	3,2
   547  0042  2844               	goto	u91
   548  0043  2845               	goto	u90
   549  0044                     u91:	
   550  0044  284E               	goto	l810
   551  0045                     u90:	
   552  0045                     l806:	
   553                           
   554                           ;ADC.c: 97:             initMultiplex(numero_);
   555  0045  3000               	movlw	0
   556  0046  00F7               	movwf	initMultiplex@valor
   557  0047  00F8               	movwf	initMultiplex@valor+1
   558  0048  120A  118A  208F  120A  118A  	fcall	_initMultiplex
   559  004D                     l808:	
   560                           
   561                           ;ADC.c: 98:             change = 0;
   562  004D  01F4               	clrf	_change
   563  004E                     l810:	
   564                           
   565                           ;ADC.c: 100:         PORTA = contador1;
   566  004E  0870               	movf	_contador1,w
   567  004F  1283               	bcf	3,5	;RP0=0, select bank0
   568  0050  1303               	bcf	3,6	;RP1=0, select bank0
   569  0051  0085               	movwf	5	;volatile
   570  0052  2840               	goto	l804
   571  0053  120A  118A  280C   	ljmp	start
   572  0056                     __end_of_main:	
   573                           
   574                           	psect	text1
   575  008F                     __ptext1:	
   576 ;; *************** function _initMultiplex *****************
   577 ;; Defined at:
   578 ;;		line 5 in file "Multiplexar.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;  valor           2    2[COMMON] unsigned int 
   581 ;; Auto vars:     Size  Location     Type
   582 ;;		None
   583 ;; Return value:  Size  Location     Type
   584 ;;                  1    wreg      void 
   585 ;; Registers used:
   586 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   587 ;; Tracked objects:
   588 ;;		On entry : 0/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   592 ;;      Params:         2       0       0       0       0
   593 ;;      Locals:         0       0       0       0       0
   594 ;;      Temps:          0       0       0       0       0
   595 ;;      Totals:         2       0       0       0       0
   596 ;;Total ram usage:        2 bytes
   597 ;; Hardware stack levels used:    2
   598 ;; Hardware stack levels required when called:    1
   599 ;; This function calls:
   600 ;;		Nothing
   601 ;; This function is called by:
   602 ;;		_main
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606                           
   607                           ;psect for function _initMultiplex
   608  008F                     _initMultiplex:	
   609  008F                     l754:	
   610                           ;incstack = 0
   611                           ; Regs used in _initMultiplex: [wreg-fsr0h+status,2+status,0+pclath]
   612                           
   613                           
   614                           ;Multiplexar.c: 6:     unsigned char const SEGMENT_MAP[16] = {0x3F, 0x06, 0x5B, 0x4F, 0x
      +                          66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F, 0x77, 0x7C, 0X39, 0X5E, 0X79, 0X71};;Multiplexar.c: 7:
      +                                       if(PORTDbits.RD1 == 1){
   615  008F  1283               	bcf	3,5	;RP0=0, select bank0
   616  0090  1303               	bcf	3,6	;RP1=0, select bank0
   617  0091  1C88               	btfss	8,1	;volatile
   618  0092  2894               	goto	u81
   619  0093  2895               	goto	u80
   620  0094                     u81:	
   621  0094  28A2               	goto	l74
   622  0095                     u80:	
   623  0095                     l756:	
   624                           
   625                           ;Multiplexar.c: 8:                 PORTDbits.RD1 = 0;
   626  0095  1088               	bcf	8,1	;volatile
   627                           
   628                           ;Multiplexar.c: 9:                 PORTDbits.RD0 = 0;
   629  0096  1008               	bcf	8,0	;volatile
   630  0097                     l758:	
   631                           
   632                           ;Multiplexar.c: 10:                 PORTC = SEGMENT_MAP[valor];
   633  0097  0877               	movf	initMultiplex@valor,w
   634  0098  3E01               	addlw	low ((initMultiplex@SEGMENT_MAP-__stringbase)| (0+32768))
   635  0099  0084               	movwf	4
   636  009A  120A  118A  20AF  120A  118A  	fcall	stringdir
   637  009F  0087               	movwf	7	;volatile
   638  00A0                     l760:	
   639                           
   640                           ;Multiplexar.c: 11:                 PORTDbits.RD0 = 1;
   641  00A0  1408               	bsf	8,0	;volatile
   642                           
   643                           ;Multiplexar.c: 12:             }else {
   644  00A1  28AE               	goto	l76
   645  00A2                     l74:	
   646                           
   647                           ;Multiplexar.c: 13:                 PORTDbits.RD0 = 0;
   648  00A2  1008               	bcf	8,0	;volatile
   649                           
   650                           ;Multiplexar.c: 14:                 PORTDbits.RD1 = 0;
   651  00A3  1088               	bcf	8,1	;volatile
   652  00A4                     l762:	
   653                           
   654                           ;Multiplexar.c: 15:                 PORTC = SEGMENT_MAP[valor+1];
   655  00A4  0877               	movf	initMultiplex@valor,w
   656  00A5  3E02               	addlw	low (((initMultiplex@SEGMENT_MAP-__stringbase)| (0+32768)+1))
   657  00A6  0084               	movwf	4
   658  00A7  120A  118A  20AF  120A  118A  	fcall	stringdir
   659  00AC  0087               	movwf	7	;volatile
   660  00AD                     l764:	
   661                           
   662                           ;Multiplexar.c: 16:                 PORTDbits.RD1 = 1;
   663  00AD  1488               	bsf	8,1	;volatile
   664  00AE                     l76:	
   665  00AE  0008               	return
   666  00AF                     __end_of_initMultiplex:	
   667                           
   668                           	psect	text2
   669  0056                     __ptext2:	
   670 ;; *************** function _ISR *****************
   671 ;; Defined at:
   672 ;;		line 39 in file "ADC.c"
   673 ;; Parameters:    Size  Location     Type
   674 ;;		None
   675 ;; Auto vars:     Size  Location     Type
   676 ;;		None
   677 ;; Return value:  Size  Location     Type
   678 ;;                  1    wreg      void 
   679 ;; Registers used:
   680 ;;		wreg
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   686 ;;      Params:         0       0       0       0       0
   687 ;;      Locals:         0       0       0       0       0
   688 ;;      Temps:          2       0       0       0       0
   689 ;;      Totals:         2       0       0       0       0
   690 ;;Total ram usage:        2 bytes
   691 ;; Hardware stack levels used:    1
   692 ;; This function calls:
   693 ;;		Nothing
   694 ;; This function is called by:
   695 ;;		Interrupt level 1
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           
   700                           ;psect for function _ISR
   701  0056                     _ISR:	
   702  0056                     i1l680:	
   703                           
   704                           ;ADC.c: 40:     INTCONbits.GIE = 0;
   705  0056  138B               	bcf	11,7	;volatile
   706                           
   707                           ;ADC.c: 41:     INTCONbits.RBIE = 0;
   708  0057  118B               	bcf	11,3	;volatile
   709                           
   710                           ;ADC.c: 42:     INTCONbits.T0IE = 0;
   711  0058  128B               	bcf	11,5	;volatile
   712                           
   713                           ;ADC.c: 43:     if(INTCONbits.T0IF == 1){
   714  0059  1D0B               	btfss	11,2	;volatile
   715  005A  285C               	goto	u2_21
   716  005B  285D               	goto	u2_20
   717  005C                     u2_21:	
   718  005C  2863               	goto	i1l686
   719  005D                     u2_20:	
   720  005D                     i1l682:	
   721                           
   722                           ;ADC.c: 44:         TMR0 = 99;
   723  005D  3063               	movlw	99
   724  005E  1283               	bcf	3,5	;RP0=0, select bank0
   725  005F  1303               	bcf	3,6	;RP1=0, select bank0
   726  0060  0081               	movwf	1	;volatile
   727  0061                     i1l684:	
   728                           
   729                           ;ADC.c: 45:         change = 1;
   730  0061  01F4               	clrf	_change
   731  0062  0AF4               	incf	_change,f
   732  0063                     i1l686:	
   733                           
   734                           ;ADC.c: 47:     if(INTCONbits.RBIF == 1 && PORTBbits.RB1 == 1){
   735  0063  1C0B               	btfss	11,0	;volatile
   736  0064  2866               	goto	u3_21
   737  0065  2867               	goto	u3_20
   738  0066                     u3_21:	
   739  0066  2873               	goto	i1l692
   740  0067                     u3_20:	
   741  0067                     i1l688:	
   742  0067  1283               	bcf	3,5	;RP0=0, select bank0
   743  0068  1303               	bcf	3,6	;RP1=0, select bank0
   744  0069  1C86               	btfss	6,1	;volatile
   745  006A  286C               	goto	u4_21
   746  006B  286D               	goto	u4_20
   747  006C                     u4_21:	
   748  006C  2873               	goto	i1l692
   749  006D                     u4_20:	
   750  006D                     i1l690:	
   751                           
   752                           ;ADC.c: 48:         contador1++;
   753  006D  3001               	movlw	1
   754  006E  07F0               	addwf	_contador1,f
   755  006F  1803               	skipnc
   756  0070  0AF1               	incf	_contador1+1,f
   757  0071  3000               	movlw	0
   758  0072  07F1               	addwf	_contador1+1,f
   759  0073                     i1l692:	
   760                           
   761                           ;ADC.c: 50:     if(INTCONbits.RBIF == 1 && PORTBbits.RB0 == 1){
   762  0073  1C0B               	btfss	11,0	;volatile
   763  0074  2876               	goto	u5_21
   764  0075  2877               	goto	u5_20
   765  0076                     u5_21:	
   766  0076  2883               	goto	i1l698
   767  0077                     u5_20:	
   768  0077                     i1l694:	
   769  0077  1283               	bcf	3,5	;RP0=0, select bank0
   770  0078  1303               	bcf	3,6	;RP1=0, select bank0
   771  0079  1C06               	btfss	6,0	;volatile
   772  007A  287C               	goto	u6_21
   773  007B  287D               	goto	u6_20
   774  007C                     u6_21:	
   775  007C  2883               	goto	i1l698
   776  007D                     u6_20:	
   777  007D                     i1l696:	
   778                           
   779                           ;ADC.c: 51:         contador1--;
   780  007D  3001               	movlw	1
   781  007E  02F0               	subwf	_contador1,f
   782  007F  3000               	movlw	0
   783  0080  1C03               	skipc
   784  0081  03F1               	decf	_contador1+1,f
   785  0082  02F1               	subwf	_contador1+1,f
   786  0083                     i1l698:	
   787                           
   788                           ;ADC.c: 53:     INTCONbits.GIE = 1;
   789  0083  178B               	bsf	11,7	;volatile
   790  0084                     i1l700:	
   791                           
   792                           ;ADC.c: 54:     INTCONbits.RBIE = 1;
   793  0084  158B               	bsf	11,3	;volatile
   794  0085                     i1l702:	
   795                           
   796                           ;ADC.c: 55:     INTCONbits.RBIF = 0;
   797  0085  100B               	bcf	11,0	;volatile
   798  0086                     i1l704:	
   799                           
   800                           ;ADC.c: 56:     INTCONbits.T0IE = 1;
   801  0086  168B               	bsf	11,5	;volatile
   802  0087                     i1l706:	
   803                           
   804                           ;ADC.c: 57:     INTCONbits.T0IF = 0;
   805  0087  110B               	bcf	11,2	;volatile
   806  0088                     i1l56:	
   807  0088  0876               	movf	??_ISR+1,w
   808  0089  008A               	movwf	10
   809  008A  0E75               	swapf	??_ISR^(0+4294967168),w
   810  008B  0083               	movwf	3
   811  008C  0EFE               	swapf	btemp,f
   812  008D  0E7E               	swapf	btemp,w
   813  008E  0009               	retfie
   814  008F                     __end_of_ISR:	
   815  007E                     btemp	set	126	;btemp
   816  007E                     wtemp0	set	126
   817                           
   818                           	psect	intentry
   819  0004                     __pintentry:	
   820                           ;incstack = 0
   821                           ; Regs used in _ISR: [wreg]
   822                           
   823  0004                     interrupt_function:	
   824  007E                     saved_w	set	btemp
   825  0004  00FE               	movwf	btemp
   826  0005  0E03               	swapf	3,w
   827  0006  00F5               	movwf	??_ISR
   828  0007  080A               	movf	10,w
   829  0008  00F6               	movwf	??_ISR+1
   830  0009  120A  118A  2856   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_initMultiplex

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     120
                      _initMultiplex
 ---------------------------------------------------------------------------------
 (2) _initMultiplex                                        2     0      2     120
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initMultiplex

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 03 13:15:34 2020

                               pc 0002                       __CFG_CP$OFF 0000                                l74 00A2  
                              l76 00AE                                u80 0095                                u81 0094  
                              u90 0045                                u91 0044                                fsr 0004  
                             l800 003D                               l810 004E                               l802 003E  
                             l804 0040                               l806 0045                               l760 00A0  
                             l808 004D                               l762 00A4                               l754 008F  
                             l770 001D                               l764 00AD                               l756 0095  
                             l780 0029                               l772 0025                               l758 0097  
                             l790 0036                               l782 002D                               l774 0026  
                             l766 0018                               l792 0037                               l784 002E  
                             l776 0027                               l768 001C                               l794 003A  
                             l786 0032                               l778 0028                               l796 003B  
                             l788 0035                               l798 003C                      __CFG_CPD$OFF 0000  
                             _ISR 0056                               fsr0 0004                      __CFG_LVP$OFF 0000  
                            ?_ISR 0075                              _IOCB 0096                              i1l56 0088  
                            _TMR0 0001                              u2_20 005D                              u2_21 005C  
                            u3_20 0067                              u3_21 0066                              u4_20 006D  
                            u4_21 006C                              u5_20 0077                              u5_21 0076  
                            u6_20 007D                              u6_21 007C                      __CFG_WRT$OFF 0000  
                            _main 0018                              btemp 007E                              start 000C  
                   __CFG_IESO$OFF 0000                             ??_ISR 0075  __end_ofinitMultiplex@SEGMENT_MAP 00C5  
                           ?_main 0075                     __CFG_WDTE$OFF 0000                             _ANSEL 0188  
                           i1l700 0084                             i1l702 0085                             i1l704 0086  
                           i1l706 0087                             i1l680 0056                             i1l690 006D  
                           i1l682 005D                             i1l692 0073                             i1l684 0061  
                           i1l694 0077                             i1l686 0063                             i1l696 007D  
                           i1l688 0067                             i1l698 0083                             _PORTA 0005  
                           _PORTB 0006                             _PORTC 0007                             _PORTD 0008  
                           _TRISA 0085                             _TRISB 0086                             _TRISC 0087  
                           _TRISD 0088                    __CFG_FCMEN$OFF 0000                    __CFG_BOREN$OFF 0000  
                           pclath 000A                             status 0003                             wtemp0 007E  
                  __CFG_MCLRE$OFF 0000                   __initialization 000F                      __end_of_main 0056  
                          ??_main 0079            __size_of_initMultiplex 0020                            _ANSELH 0189  
                          _INTCON 000B                    __CFG_PWRTE$OFF 0000                            _change 0074  
                          saved_w 007E           __end_of__initialization 0014                     _initMultiplex 008F  
                  __pcstackCOMMON 0075                    _OPTION_REGbits 0081                    ?_initMultiplex 0077  
                      __pmaintext 0018                        __pintentry 0004                        __stringtab 00AF  
                         __ptext1 008F                           __ptext2 0056                      __size_of_ISR 0039  
                         _numero_ 0072              end_of_initialization 0014                   ??_initMultiplex 0079  
                       _PORTBbits 0006                         _PORTDbits 0008                initMultiplex@valor 0077  
                       _TRISBbits 0086               start_initialization 000F                       __end_of_ISR 008F  
        __CFG_FOSC$INTRC_NOCLKOUT 0000                       __pbssCOMMON 0070                         ___latbits 0002  
        initMultiplex@SEGMENT_MAP 00B5                         __pstrings 00AF                         _contador1 0070  
               interrupt_function 0004                          _IOCBbits 0096                       __stringbase 00B4  
           __end_of_initMultiplex 00AF                __end_of__stringtab 00B5                 __CFG_BOR4V$BOR40V 0000  
                   __size_of_main 003E                        _INTCONbits 000B                          intlevel1 0000  
                       stringcode 00AF                        _OPTION_REG 0081                          stringdir 00AF  
                        stringtab 00AF  
