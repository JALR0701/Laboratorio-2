

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 03 13:10:09 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.10
    19                           ; Generated 31/07/2019 GMT
    20                           ; 
    21                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286                           
   287                           	psect	strings
   288  01A7                     __pstrings:	
   289  01A7                     stringtab:	
   290  01A7                     __stringtab:	
   291  01A7                     stringcode:	
   292                           ;	String table - string pointers are 1 byte each
   293                           
   294  01A7                     stringdir:	
   295  01A7  3001               	movlw	high stringdir
   296  01A8  008A               	movwf	10
   297  01A9  0804               	movf	4,w
   298  01AA  0A84               	incf	4,f
   299  01AB  0782               	addwf	2,f
   300  01AC                     __stringbase:	
   301  01AC  3400               	retlw	0
   302  01AD                     __end_of__stringtab:	
   303  01AD                     initMultiplex@SEGMENT_MAP:	
   304  01AD  343F               	retlw	63
   305  01AE  3406               	retlw	6
   306  01AF  345B               	retlw	91
   307  01B0  344F               	retlw	79
   308  01B1  3466               	retlw	102
   309  01B2  346D               	retlw	109
   310  01B3  347D               	retlw	125
   311  01B4  3407               	retlw	7
   312  01B5  347F               	retlw	127
   313  01B6  346F               	retlw	111
   314  01B7  3477               	retlw	119
   315  01B8  347C               	retlw	124
   316  01B9  3439               	retlw	57
   317  01BA  345E               	retlw	94
   318  01BB  3479               	retlw	121
   319  01BC  3471               	retlw	113
   320  01BD                     __end_ofinitMultiplex@SEGMENT_MAP:	
   321  001F                     _ADCON0bits	set	31
   322  001F                     _ADCON0	set	31
   323  000C                     _PIR1	set	12
   324  0008                     _PORTDbits	set	8
   325  0008                     _PORTD	set	8
   326  0007                     _PORTC	set	7
   327  0006                     _PORTB	set	6
   328  0005                     _PORTA	set	5
   329  000B                     _INTCON	set	11
   330  001E                     _ADRESH	set	30
   331  000C                     _PIR1bits	set	12
   332  0006                     _PORTBbits	set	6
   333  0001                     _TMR0	set	1
   334  000B                     _INTCONbits	set	11
   335  009F                     _ADCON1	set	159
   336  008C                     _PIE1	set	140
   337  0096                     _IOCBbits	set	150
   338  0096                     _IOCB	set	150
   339  0081                     _OPTION_REGbits	set	129
   340  0081                     _OPTION_REG	set	129
   341  0088                     _TRISD	set	136
   342  0087                     _TRISC	set	135
   343  0086                     _TRISBbits	set	134
   344  0086                     _TRISB	set	134
   345  0085                     _TRISA	set	133
   346  0189                     _ANSELHbits	set	393
   347  0189                     _ANSELH	set	393
   348  0188                     _ANSEL	set	392
   349                           
   350                           ; #config settings
   351  0000                     
   352                           	psect	cinit
   353  0011                     start_initialization:	
   354  0011                     __initialization:	
   355                           
   356                           ; Clear objects allocated to COMMON
   357  0011  01FB               	clrf	__pbssCOMMON& (0+127)
   358  0012  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   359                           
   360                           ; Clear objects allocated to BANK0
   361  0013  1283               	bcf	3,5	;RP0=0, select bank0
   362  0014  1303               	bcf	3,6	;RP1=0, select bank0
   363  0015  01AE               	clrf	__pbssBANK0& (0+127)
   364  0016  01AF               	clrf	(__pbssBANK0+1)& (0+127)
   365  0017  01B0               	clrf	(__pbssBANK0+2)& (0+127)
   366  0018  01B1               	clrf	(__pbssBANK0+3)& (0+127)
   367  0019  01B2               	clrf	(__pbssBANK0+4)& (0+127)
   368  001A  01B3               	clrf	(__pbssBANK0+5)& (0+127)
   369  001B                     end_of_initialization:	
   370                           ;End of C runtime variable initialization code
   371                           
   372  001B                     __end_of__initialization:	
   373  001B  0183               	clrf	3
   374  001C  120A  118A  281F   	ljmp	_main	;jump to C main() function
   375                           
   376                           	psect	bssCOMMON
   377  007B                     __pbssCOMMON:	
   378  007B                     _numero_:	
   379  007B                     	ds	2
   380                           
   381                           	psect	bssBANK0
   382  002E                     __pbssBANK0:	
   383  002E                     _d2:	
   384  002E                     	ds	2
   385  0030                     _d1:	
   386  0030                     	ds	2
   387  0032                     _contador1:	
   388  0032                     	ds	1
   389  0033                     _change:	
   390  0033                     	ds	1
   391                           
   392                           	psect	cstackCOMMON
   393  0070                     __pcstackCOMMON:	
   394  0070                     ?_ISR:	
   395  0070                     ?_main:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0070                     ?___wmul:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0070                     ___wmul@multiplier:	
   402                           ; 2 bytes @ 0x0
   403                           
   404                           
   405                           ; 2 bytes @ 0x0
   406  0070                     	ds	2
   407  0072                     ___wmul@multiplicand:	
   408                           
   409                           ; 2 bytes @ 0x2
   410  0072                     	ds	2
   411  0074                     ??___wmul:	
   412  0074                     ___wmul@product:	
   413                           ; 1 bytes @ 0x4
   414                           
   415                           
   416                           ; 2 bytes @ 0x4
   417  0074                     	ds	2
   418  0076                     ?___awdiv:	
   419  0076                     ___awdiv@divisor:	
   420                           ; 2 bytes @ 0x6
   421                           
   422                           
   423                           ; 2 bytes @ 0x6
   424  0076                     	ds	2
   425  0078                     ___awdiv@dividend:	
   426                           
   427                           ; 2 bytes @ 0x8
   428  0078                     	ds	2
   429  007A                     ??___awdiv:	
   430                           
   431                           ; 1 bytes @ 0xA
   432  007A                     	ds	1
   433                           
   434                           	psect	cstackBANK0
   435  0020                     __pcstackBANK0:	
   436  0020                     ___awdiv@counter:	
   437                           
   438                           ; 1 bytes @ 0x0
   439  0020                     	ds	1
   440  0021                     ___awdiv@sign:	
   441                           
   442                           ; 1 bytes @ 0x1
   443  0021                     	ds	1
   444  0022                     ___awdiv@quotient:	
   445                           
   446                           ; 2 bytes @ 0x2
   447  0022                     	ds	2
   448  0024                     ??_ISR:	
   449                           
   450                           ; 1 bytes @ 0x4
   451  0024                     	ds	4
   452  0028                     ?_initMultiplex:	
   453  0028                     initMultiplex@valor:	
   454                           ; 1 bytes @ 0x8
   455                           
   456                           
   457                           ; 2 bytes @ 0x8
   458  0028                     	ds	2
   459  002A                     initMultiplex@valor2:	
   460                           
   461                           ; 2 bytes @ 0xA
   462  002A                     	ds	2
   463  002C                     ??_initMultiplex:	
   464  002C                     ??_main:	
   465                           ; 1 bytes @ 0xC
   466                           
   467                           
   468                           ; 1 bytes @ 0xC
   469  002C                     	ds	2
   470                           
   471                           	psect	maintext
   472  001F                     __pmaintext:	
   473 ;;
   474 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   475 ;;
   476 ;; *************** function _main *****************
   477 ;; Defined at:
   478 ;;		line 69 in file "ADC.c"
   479 ;; Parameters:    Size  Location     Type
   480 ;;		None
   481 ;; Auto vars:     Size  Location     Type
   482 ;;		None
   483 ;; Return value:  Size  Location     Type
   484 ;;                  1    wreg      void 
   485 ;; Registers used:
   486 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   487 ;; Tracked objects:
   488 ;;		On entry : B00/0
   489 ;;		On exit  : 0/0
   490 ;;		Unchanged: 0/0
   491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   492 ;;      Params:         0       0       0       0       0
   493 ;;      Locals:         0       0       0       0       0
   494 ;;      Temps:          0       2       0       0       0
   495 ;;      Totals:         0       2       0       0       0
   496 ;;Total ram usage:        2 bytes
   497 ;; Hardware stack levels required when called:    3
   498 ;; This function calls:
   499 ;;		_initMultiplex
   500 ;; This function is called by:
   501 ;;		Startup code after reset
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505                           
   506                           ;psect for function _main
   507  001F                     _main:	
   508  001F                     l961:	
   509                           ;incstack = 0
   510                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   511                           
   512                           
   513                           ;ADC.c: 70:     TRISA = 0;
   514  001F  1683               	bsf	3,5	;RP0=1, select bank1
   515  0020  1303               	bcf	3,6	;RP1=0, select bank1
   516  0021  0185               	clrf	5	;volatile
   517                           
   518                           ;ADC.c: 71:     TRISB = 0;
   519  0022  0186               	clrf	6	;volatile
   520  0023                     l963:	
   521                           
   522                           ;ADC.c: 72:     TRISBbits.TRISB0 = 1;
   523  0023  1406               	bsf	6,0	;volatile
   524  0024                     l965:	
   525                           
   526                           ;ADC.c: 73:     TRISBbits.TRISB1 = 1;
   527  0024  1486               	bsf	6,1	;volatile
   528                           
   529                           ;ADC.c: 74:     TRISC = 0;
   530  0025  0187               	clrf	7	;volatile
   531                           
   532                           ;ADC.c: 75:     TRISD = 0;
   533  0026  0188               	clrf	8	;volatile
   534                           
   535                           ;ADC.c: 77:     ANSEL = 0;
   536  0027  1683               	bsf	3,5	;RP0=1, select bank3
   537  0028  1703               	bsf	3,6	;RP1=1, select bank3
   538  0029  0188               	clrf	8	;volatile
   539                           
   540                           ;ADC.c: 78:     ANSELH = 0;
   541  002A  0189               	clrf	9	;volatile
   542                           
   543                           ;ADC.c: 80:     INTCON = 0;
   544  002B  018B               	clrf	11	;volatile
   545  002C                     l967:	
   546                           
   547                           ;ADC.c: 81:     INTCONbits.GIE = 1;
   548  002C  178B               	bsf	11,7	;volatile
   549  002D                     l969:	
   550                           
   551                           ;ADC.c: 82:     INTCONbits.RBIE = 1;
   552  002D  158B               	bsf	11,3	;volatile
   553  002E                     l971:	
   554                           
   555                           ;ADC.c: 83:     INTCONbits.RBIF = 0;
   556  002E  100B               	bcf	11,0	;volatile
   557  002F                     l973:	
   558                           
   559                           ;ADC.c: 84:     INTCONbits.T0IE = 1;
   560  002F  168B               	bsf	11,5	;volatile
   561  0030                     l975:	
   562                           
   563                           ;ADC.c: 85:     INTCONbits.T0IF = 0;
   564  0030  110B               	bcf	11,2	;volatile
   565                           
   566                           ;ADC.c: 87:     OPTION_REG = 0;
   567  0031  1683               	bsf	3,5	;RP0=1, select bank1
   568  0032  1303               	bcf	3,6	;RP1=0, select bank1
   569  0033  0181               	clrf	1	;volatile
   570  0034                     l977:	
   571                           
   572                           ;ADC.c: 88:     OPTION_REGbits.PS2 = 1;
   573  0034  1501               	bsf	1,2	;volatile
   574  0035                     l979:	
   575                           
   576                           ;ADC.c: 90:     TMR0 = 99;
   577  0035  3063               	movlw	99
   578  0036  1283               	bcf	3,5	;RP0=0, select bank0
   579  0037  1303               	bcf	3,6	;RP1=0, select bank0
   580  0038  0081               	movwf	1	;volatile
   581  0039                     l981:	
   582                           
   583                           ;ADC.c: 92:     IOCB = 0;
   584  0039  1683               	bsf	3,5	;RP0=1, select bank1
   585  003A  1303               	bcf	3,6	;RP1=0, select bank1
   586  003B  0196               	clrf	22	;volatile
   587  003C                     l983:	
   588                           
   589                           ;ADC.c: 93:     IOCBbits.IOCB0 = 1;
   590  003C  1416               	bsf	22,0	;volatile
   591  003D                     l985:	
   592                           
   593                           ;ADC.c: 94:     IOCBbits.IOCB1 = 1;
   594  003D  1496               	bsf	22,1	;volatile
   595  003E                     l987:	
   596                           
   597                           ;ADC.c: 96:     PORTA = 0;
   598  003E  1283               	bcf	3,5	;RP0=0, select bank0
   599  003F  1303               	bcf	3,6	;RP1=0, select bank0
   600  0040  0185               	clrf	5	;volatile
   601  0041                     l989:	
   602                           
   603                           ;ADC.c: 97:     PORTB = 0;
   604  0041  0186               	clrf	6	;volatile
   605  0042                     l991:	
   606                           
   607                           ;ADC.c: 98:     PORTC = 0;
   608  0042  0187               	clrf	7	;volatile
   609  0043                     l993:	
   610                           
   611                           ;ADC.c: 99:     PORTD = 0;
   612  0043  0188               	clrf	8	;volatile
   613  0044                     l995:	
   614                           
   615                           ;ADC.c: 100:     PORTDbits.RD1 = 1;
   616  0044  1488               	bsf	8,1	;volatile
   617  0045                     l997:	
   618                           
   619                           ;ADC.c: 102:     contador1 = 0;
   620  0045  01B2               	clrf	_contador1
   621  0046                     l999:	
   622                           
   623                           ;ADC.c: 104:     INTCONbits.PEIE = 1;
   624  0046  170B               	bsf	11,6	;volatile
   625  0047                     l1001:	
   626                           
   627                           ;ADC.c: 105:     PIE1 = 0B01000000;
   628  0047  3040               	movlw	64
   629  0048  1683               	bsf	3,5	;RP0=1, select bank1
   630  0049  1303               	bcf	3,6	;RP1=0, select bank1
   631  004A  008C               	movwf	12	;volatile
   632                           
   633                           ;ADC.c: 106:     PIR1 = 0;
   634  004B  1283               	bcf	3,5	;RP0=0, select bank0
   635  004C  1303               	bcf	3,6	;RP1=0, select bank0
   636  004D  018C               	clrf	12	;volatile
   637  004E                     l1003:	
   638                           
   639                           ;ADC.c: 107:     ANSELHbits.ANS8 = 1;
   640  004E  1683               	bsf	3,5	;RP0=1, select bank3
   641  004F  1703               	bsf	3,6	;RP1=1, select bank3
   642  0050  1409               	bsf	9,0	;volatile
   643  0051                     l1005:	
   644                           
   645                           ;ADC.c: 108:     ADCON0 = 0B01100001;
   646  0051  3061               	movlw	97
   647  0052  1283               	bcf	3,5	;RP0=0, select bank0
   648  0053  1303               	bcf	3,6	;RP1=0, select bank0
   649  0054  009F               	movwf	31	;volatile
   650  0055                     l1007:	
   651                           
   652                           ;ADC.c: 109:     ADCON1 = 0;
   653  0055  1683               	bsf	3,5	;RP0=1, select bank1
   654  0056  1303               	bcf	3,6	;RP1=0, select bank1
   655  0057  019F               	clrf	31	;volatile
   656  0058                     l84:	
   657                           ;ADC.c: 111:     while (1){
   658                           
   659                           
   660                           ;ADC.c: 112:         _delay((unsigned long)((10)*(4000000/4000.0)));
   661  0058  300D               	movlw	13
   662  0059  1283               	bcf	3,5	;RP0=0, select bank0
   663  005A  1303               	bcf	3,6	;RP1=0, select bank0
   664  005B  00AD               	movwf	??_main+1
   665  005C  30FB               	movlw	251
   666  005D  00AC               	movwf	??_main
   667  005E                     u457:	
   668  005E  0BAC               	decfsz	??_main,f
   669  005F  285E               	goto	u457
   670  0060  0BAD               	decfsz	??_main+1,f
   671  0061  285E               	goto	u457
   672  0062                     l1009:	
   673                           
   674                           ;ADC.c: 113:         ADCON0bits.GO_DONE = 1;
   675  0062  1283               	bcf	3,5	;RP0=0, select bank0
   676  0063  1303               	bcf	3,6	;RP1=0, select bank0
   677  0064  149F               	bsf	31,1	;volatile
   678                           
   679                           ;ADC.c: 114:         _delay((unsigned long)((10)*(4000000/4000.0)));
   680  0065  300D               	movlw	13
   681  0066  1283               	bcf	3,5	;RP0=0, select bank0
   682  0067  1303               	bcf	3,6	;RP1=0, select bank0
   683  0068  00AD               	movwf	??_main+1
   684  0069  30FB               	movlw	251
   685  006A  00AC               	movwf	??_main
   686  006B                     u467:	
   687  006B  0BAC               	decfsz	??_main,f
   688  006C  286B               	goto	u467
   689  006D  0BAD               	decfsz	??_main+1,f
   690  006E  286B               	goto	u467
   691  006F                     l1011:	
   692                           
   693                           ;ADC.c: 115:         if(change == 1){
   694  006F  1283               	bcf	3,5	;RP0=0, select bank0
   695  0070  1303               	bcf	3,6	;RP1=0, select bank0
   696  0071  0333               	decf	_change,w
   697  0072  1D03               	btfss	3,2
   698  0073  2875               	goto	u441
   699  0074  2876               	goto	u440
   700  0075                     u441:	
   701  0075  2886               	goto	l1017
   702  0076                     u440:	
   703  0076                     l1013:	
   704                           
   705                           ;ADC.c: 116:             initMultiplex(d1, d2);
   706  0076  0831               	movf	_d1+1,w
   707  0077  00A9               	movwf	initMultiplex@valor+1
   708  0078  0830               	movf	_d1,w
   709  0079  00A8               	movwf	initMultiplex@valor
   710  007A  082F               	movf	_d2+1,w
   711  007B  00AB               	movwf	initMultiplex@valor2+1
   712  007C  082E               	movf	_d2,w
   713  007D  00AA               	movwf	initMultiplex@valor2
   714  007E  120A  118A  2187  120A  118A  	fcall	_initMultiplex
   715  0083                     l1015:	
   716                           
   717                           ;ADC.c: 117:             change = 0;
   718  0083  1283               	bcf	3,5	;RP0=0, select bank0
   719  0084  1303               	bcf	3,6	;RP1=0, select bank0
   720  0085  01B3               	clrf	_change
   721  0086                     l1017:	
   722                           
   723                           ;ADC.c: 119:         PORTA = contador1;
   724  0086  0832               	movf	_contador1,w
   725  0087  0085               	movwf	5	;volatile
   726  0088  2858               	goto	l84
   727  0089  120A  118A  280E   	ljmp	start
   728  008C                     __end_of_main:	
   729                           
   730                           	psect	text1
   731  0187                     __ptext1:	
   732 ;; *************** function _initMultiplex *****************
   733 ;; Defined at:
   734 ;;		line 5 in file "Multiplexar.c"
   735 ;; Parameters:    Size  Location     Type
   736 ;;  valor           2    8[BANK0 ] unsigned int 
   737 ;;  valor2          2   10[BANK0 ] unsigned int 
   738 ;; Auto vars:     Size  Location     Type
   739 ;;		None
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      void 
   742 ;; Registers used:
   743 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   749 ;;      Params:         0       4       0       0       0
   750 ;;      Locals:         0       0       0       0       0
   751 ;;      Temps:          0       0       0       0       0
   752 ;;      Totals:         0       4       0       0       0
   753 ;;Total ram usage:        4 bytes
   754 ;; Hardware stack levels used:    1
   755 ;; Hardware stack levels required when called:    2
   756 ;; This function calls:
   757 ;;		Nothing
   758 ;; This function is called by:
   759 ;;		_main
   760 ;; This function uses a non-reentrant model
   761 ;;
   762                           
   763                           
   764                           ;psect for function _initMultiplex
   765  0187                     _initMultiplex:	
   766  0187                     l855:	
   767                           ;incstack = 0
   768                           ; Regs used in _initMultiplex: [wreg-fsr0h+status,2+status,0+pclath]
   769                           
   770                           
   771                           ;Multiplexar.c: 6:     unsigned char const SEGMENT_MAP[16] = {0x3F, 0x06, 0x5B, 0x4F, 0x
      +                          66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F, 0x77, 0x7C, 0X39, 0X5E, 0X79, 0X71};;Multiplexar.c: 7:
      +                                       if(PORTDbits.RD1 == 1){
   772  0187  1283               	bcf	3,5	;RP0=0, select bank0
   773  0188  1303               	bcf	3,6	;RP1=0, select bank0
   774  0189  1C88               	btfss	8,1	;volatile
   775  018A  298C               	goto	u231
   776  018B  298D               	goto	u230
   777  018C                     u231:	
   778  018C  299A               	goto	l97
   779  018D                     u230:	
   780  018D                     l857:	
   781                           
   782                           ;Multiplexar.c: 8:                 PORTDbits.RD1 = 0;
   783  018D  1088               	bcf	8,1	;volatile
   784                           
   785                           ;Multiplexar.c: 9:                 PORTDbits.RD0 = 0;
   786  018E  1008               	bcf	8,0	;volatile
   787  018F                     l859:	
   788                           
   789                           ;Multiplexar.c: 10:                 PORTC = SEGMENT_MAP[valor];
   790  018F  0828               	movf	initMultiplex@valor,w
   791  0190  3E01               	addlw	low ((initMultiplex@SEGMENT_MAP-__stringbase)| (0+32768))
   792  0191  0084               	movwf	4
   793  0192  120A  118A  21A7  120A  118A  	fcall	stringdir
   794  0197  0087               	movwf	7	;volatile
   795  0198                     l861:	
   796                           
   797                           ;Multiplexar.c: 11:                 PORTDbits.RD0 = 1;
   798  0198  1408               	bsf	8,0	;volatile
   799                           
   800                           ;Multiplexar.c: 12:             }else {
   801  0199  29A6               	goto	l99
   802  019A                     l97:	
   803                           
   804                           ;Multiplexar.c: 13:                 PORTDbits.RD0 = 0;
   805  019A  1008               	bcf	8,0	;volatile
   806                           
   807                           ;Multiplexar.c: 14:                 PORTDbits.RD1 = 0;
   808  019B  1088               	bcf	8,1	;volatile
   809  019C                     l863:	
   810                           
   811                           ;Multiplexar.c: 15:                 PORTC = SEGMENT_MAP[valor2];
   812  019C  082A               	movf	initMultiplex@valor2,w
   813  019D  3E01               	addlw	low ((initMultiplex@SEGMENT_MAP-__stringbase)| (0+32768))
   814  019E  0084               	movwf	4
   815  019F  120A  118A  21A7  120A  118A  	fcall	stringdir
   816  01A4  0087               	movwf	7	;volatile
   817  01A5                     l865:	
   818                           
   819                           ;Multiplexar.c: 16:                 PORTDbits.RD1 = 1;
   820  01A5  1488               	bsf	8,1	;volatile
   821  01A6                     l99:	
   822  01A6  0008               	return
   823  01A7                     __end_of_initMultiplex:	
   824                           
   825                           	psect	text2
   826  008C                     __ptext2:	
   827 ;; *************** function _ISR *****************
   828 ;; Defined at:
   829 ;;		line 41 in file "ADC.c"
   830 ;; Parameters:    Size  Location     Type
   831 ;;		None
   832 ;; Auto vars:     Size  Location     Type
   833 ;;		None
   834 ;; Return value:  Size  Location     Type
   835 ;;                  1    wreg      void 
   836 ;; Registers used:
   837 ;;		wreg, status,2, status,0, pclath, cstack
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   843 ;;      Params:         0       0       0       0       0
   844 ;;      Locals:         0       0       0       0       0
   845 ;;      Temps:          0       4       0       0       0
   846 ;;      Totals:         0       4       0       0       0
   847 ;;Total ram usage:        4 bytes
   848 ;; Hardware stack levels used:    1
   849 ;; Hardware stack levels required when called:    1
   850 ;; This function calls:
   851 ;;		___awdiv
   852 ;;		___wmul
   853 ;; This function is called by:
   854 ;;		Interrupt level 1
   855 ;; This function uses a non-reentrant model
   856 ;;
   857                           
   858                           
   859                           ;psect for function _ISR
   860  008C                     _ISR:	
   861  008C                     i1l925:	
   862                           
   863                           ;ADC.c: 42:     INTCONbits.GIE = 0;
   864  008C  138B               	bcf	11,7	;volatile
   865                           
   866                           ;ADC.c: 43:     INTCONbits.RBIE = 0;
   867  008D  118B               	bcf	11,3	;volatile
   868                           
   869                           ;ADC.c: 44:     INTCONbits.T0IE = 0;
   870  008E  128B               	bcf	11,5	;volatile
   871                           
   872                           ;ADC.c: 45:     INTCONbits.PEIE = 0;
   873  008F  130B               	bcf	11,6	;volatile
   874                           
   875                           ;ADC.c: 46:     if(INTCONbits.T0IF == 1){
   876  0090  1D0B               	btfss	11,2	;volatile
   877  0091  2893               	goto	u38_21
   878  0092  2894               	goto	u38_20
   879  0093                     u38_21:	
   880  0093  2898               	goto	i1l931
   881  0094                     u38_20:	
   882  0094                     i1l927:	
   883                           
   884                           ;ADC.c: 47:         TMR0 = 99;
   885  0094  3063               	movlw	99
   886  0095  0081               	movwf	1	;volatile
   887  0096                     i1l929:	
   888                           
   889                           ;ADC.c: 48:         change = 1;
   890  0096  01B3               	clrf	_change
   891  0097  0AB3               	incf	_change,f
   892  0098                     i1l931:	
   893                           
   894                           ;ADC.c: 50:     if(INTCONbits.RBIF == 1 && PORTBbits.RB1 == 1){
   895  0098  1C0B               	btfss	11,0	;volatile
   896  0099  289B               	goto	u39_21
   897  009A  289C               	goto	u39_20
   898  009B                     u39_21:	
   899  009B  28A4               	goto	i1l937
   900  009C                     u39_20:	
   901  009C                     i1l933:	
   902  009C  1C86               	btfss	6,1	;volatile
   903  009D  289F               	goto	u40_21
   904  009E  28A0               	goto	u40_20
   905  009F                     u40_21:	
   906  009F  28A4               	goto	i1l937
   907  00A0                     u40_20:	
   908  00A0                     i1l935:	
   909                           
   910                           ;ADC.c: 51:         contador1++;
   911  00A0  3001               	movlw	1
   912  00A1  00A4               	movwf	??_ISR
   913  00A2  0824               	movf	??_ISR,w
   914  00A3  07B2               	addwf	_contador1,f
   915  00A4                     i1l937:	
   916                           
   917                           ;ADC.c: 53:     if(INTCONbits.RBIF == 1 && PORTBbits.RB0 == 1){
   918  00A4  1C0B               	btfss	11,0	;volatile
   919  00A5  28A7               	goto	u41_21
   920  00A6  28A8               	goto	u41_20
   921  00A7                     u41_21:	
   922  00A7  28AE               	goto	i1l943
   923  00A8                     u41_20:	
   924  00A8                     i1l939:	
   925  00A8  1C06               	btfss	6,0	;volatile
   926  00A9  28AB               	goto	u42_21
   927  00AA  28AC               	goto	u42_20
   928  00AB                     u42_21:	
   929  00AB  28AE               	goto	i1l943
   930  00AC                     u42_20:	
   931  00AC                     i1l941:	
   932                           
   933                           ;ADC.c: 54:         contador1--;
   934  00AC  3001               	movlw	1
   935  00AD  02B2               	subwf	_contador1,f
   936  00AE                     i1l943:	
   937                           
   938                           ;ADC.c: 56:     if(PIR1bits.ADIF == 1){
   939  00AE  1F0C               	btfss	12,6	;volatile
   940  00AF  28B1               	goto	u43_21
   941  00B0  28B2               	goto	u43_20
   942  00B1                     u43_21:	
   943  00B1  28EB               	goto	i1l947
   944  00B2                     u43_20:	
   945  00B2                     i1l945:	
   946                           
   947                           ;ADC.c: 57:         d1 = ADRESH * (0B00001111);
   948  00B2  081E               	movf	30,w	;volatile
   949  00B3  00A4               	movwf	??_ISR
   950  00B4  01A5               	clrf	??_ISR+1
   951  00B5  0824               	movf	??_ISR,w
   952  00B6  00F0               	movwf	___wmul@multiplier
   953  00B7  0825               	movf	??_ISR+1,w
   954  00B8  00F1               	movwf	___wmul@multiplier+1
   955  00B9  300F               	movlw	15
   956  00BA  00F2               	movwf	___wmul@multiplicand
   957  00BB  3000               	movlw	0
   958  00BC  00F3               	movwf	___wmul@multiplicand+1
   959  00BD  120A  118A  2162  120A  118A  	fcall	___wmul
   960  00C2  0871               	movf	?___wmul+1,w
   961  00C3  1283               	bcf	3,5	;RP0=0, select bank0
   962  00C4  1303               	bcf	3,6	;RP1=0, select bank0
   963  00C5  00B1               	movwf	_d1+1
   964  00C6  0870               	movf	?___wmul,w
   965  00C7  00B0               	movwf	_d1
   966                           
   967                           ;ADC.c: 58:         d2 = ADRESH * (0B11110000)/16;
   968  00C8  3010               	movlw	16
   969  00C9  00F6               	movwf	___awdiv@divisor
   970  00CA  3000               	movlw	0
   971  00CB  00F7               	movwf	___awdiv@divisor+1
   972  00CC  081E               	movf	30,w	;volatile
   973  00CD  00A4               	movwf	??_ISR
   974  00CE  01A5               	clrf	??_ISR+1
   975  00CF  0824               	movf	??_ISR,w
   976  00D0  00F0               	movwf	___wmul@multiplier
   977  00D1  0825               	movf	??_ISR+1,w
   978  00D2  00F1               	movwf	___wmul@multiplier+1
   979  00D3  30F0               	movlw	240
   980  00D4  00F2               	movwf	___wmul@multiplicand
   981  00D5  3000               	movlw	0
   982  00D6  00F3               	movwf	___wmul@multiplicand+1
   983  00D7  120A  118A  2162  120A  118A  	fcall	___wmul
   984  00DC  0871               	movf	?___wmul+1,w
   985  00DD  00F9               	movwf	___awdiv@dividend+1
   986  00DE  0870               	movf	?___wmul,w
   987  00DF  00F8               	movwf	___awdiv@dividend
   988  00E0  120A  118A  20F9  120A  118A  	fcall	___awdiv
   989  00E5  0877               	movf	?___awdiv+1,w
   990  00E6  1283               	bcf	3,5	;RP0=0, select bank0
   991  00E7  1303               	bcf	3,6	;RP1=0, select bank0
   992  00E8  00AF               	movwf	_d2+1
   993  00E9  0876               	movf	?___awdiv,w
   994  00EA  00AE               	movwf	_d2
   995  00EB                     i1l947:	
   996                           
   997                           ;ADC.c: 60:     INTCONbits.GIE = 1;
   998  00EB  178B               	bsf	11,7	;volatile
   999  00EC                     i1l949:	
  1000                           
  1001                           ;ADC.c: 61:     INTCONbits.RBIE = 1;
  1002  00EC  158B               	bsf	11,3	;volatile
  1003  00ED                     i1l951:	
  1004                           
  1005                           ;ADC.c: 62:     INTCONbits.RBIF = 0;
  1006  00ED  100B               	bcf	11,0	;volatile
  1007  00EE                     i1l953:	
  1008                           
  1009                           ;ADC.c: 63:     INTCONbits.T0IE = 1;
  1010  00EE  168B               	bsf	11,5	;volatile
  1011  00EF                     i1l955:	
  1012                           
  1013                           ;ADC.c: 64:     INTCONbits.T0IF = 0;
  1014  00EF  110B               	bcf	11,2	;volatile
  1015  00F0                     i1l957:	
  1016                           
  1017                           ;ADC.c: 65:     INTCONbits.PEIE = 1;
  1018  00F0  170B               	bsf	11,6	;volatile
  1019  00F1                     i1l959:	
  1020                           
  1021                           ;ADC.c: 66:     PIR1bits.ADIF = 0;
  1022  00F1  130C               	bcf	12,6	;volatile
  1023  00F2                     i1l79:	
  1024  00F2  0827               	movf	??_ISR+3,w
  1025  00F3  008A               	movwf	10
  1026  00F4  0E26               	swapf	(??_ISR+2)^0,w
  1027  00F5  0083               	movwf	3
  1028  00F6  0EFE               	swapf	btemp,f
  1029  00F7  0E7E               	swapf	btemp,w
  1030  00F8  0009               	retfie
  1031  00F9                     __end_of_ISR:	
  1032                           
  1033                           	psect	intentry
  1034  0004                     __pintentry:	
  1035                           ;incstack = 0
  1036                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1037                           
  1038  0004                     interrupt_function:	
  1039  007E                     saved_w	set	btemp
  1040  0004  00FE               	movwf	btemp
  1041  0005  0E03               	swapf	3,w
  1042  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1043  0007  1303               	bcf	3,6	;RP1=0, select bank0
  1044  0008  00A6               	movwf	??_ISR+2
  1045  0009  080A               	movf	10,w
  1046  000A  00A7               	movwf	??_ISR+3
  1047  000B  120A  118A  288C   	ljmp	_ISR
  1048                           
  1049                           	psect	text3
  1050  0162                     __ptext3:	
  1051 ;; *************** function ___wmul *****************
  1052 ;; Defined at:
  1053 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  1054 ;; Parameters:    Size  Location     Type
  1055 ;;  multiplier      2    0[COMMON] unsigned int 
  1056 ;;  multiplicand    2    2[COMMON] unsigned int 
  1057 ;; Auto vars:     Size  Location     Type
  1058 ;;  product         2    4[COMMON] unsigned int 
  1059 ;; Return value:  Size  Location     Type
  1060 ;;                  2    0[COMMON] unsigned int 
  1061 ;; Registers used:
  1062 ;;		wreg, status,2, status,0
  1063 ;; Tracked objects:
  1064 ;;		On entry : 0/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1068 ;;      Params:         4       0       0       0       0
  1069 ;;      Locals:         2       0       0       0       0
  1070 ;;      Temps:          0       0       0       0       0
  1071 ;;      Totals:         6       0       0       0       0
  1072 ;;Total ram usage:        6 bytes
  1073 ;; Hardware stack levels used:    1
  1074 ;; This function calls:
  1075 ;;		Nothing
  1076 ;; This function is called by:
  1077 ;;		_ISR
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           
  1082                           ;psect for function ___wmul
  1083  0162                     ___wmul:	
  1084  0162                     i1l867:	
  1085                           ;incstack = 0
  1086                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1087                           
  1088  0162  01F4               	clrf	___wmul@product
  1089  0163  01F5               	clrf	___wmul@product+1
  1090  0164                     i1l869:	
  1091  0164  1C70               	btfss	___wmul@multiplier,0
  1092  0165  2967               	goto	u24_21
  1093  0166  2968               	goto	u24_20
  1094  0167                     u24_21:	
  1095  0167  296E               	goto	i1l185
  1096  0168                     u24_20:	
  1097  0168                     i1l871:	
  1098  0168  0872               	movf	___wmul@multiplicand,w
  1099  0169  07F4               	addwf	___wmul@product,f
  1100  016A  1803               	skipnc
  1101  016B  0AF5               	incf	___wmul@product+1,f
  1102  016C  0873               	movf	___wmul@multiplicand+1,w
  1103  016D  07F5               	addwf	___wmul@product+1,f
  1104  016E                     i1l185:	
  1105  016E  3001               	movlw	1
  1106  016F                     u25_25:	
  1107  016F  1003               	clrc
  1108  0170  0DF2               	rlf	___wmul@multiplicand,f
  1109  0171  0DF3               	rlf	___wmul@multiplicand+1,f
  1110  0172  3EFF               	addlw	-1
  1111  0173  1D03               	skipz
  1112  0174  296F               	goto	u25_25
  1113  0175                     i1l873:	
  1114  0175  3001               	movlw	1
  1115  0176                     u26_25:	
  1116  0176  1003               	clrc
  1117  0177  0CF1               	rrf	___wmul@multiplier+1,f
  1118  0178  0CF0               	rrf	___wmul@multiplier,f
  1119  0179  3EFF               	addlw	-1
  1120  017A  1D03               	skipz
  1121  017B  2976               	goto	u26_25
  1122  017C                     i1l875:	
  1123  017C  0870               	movf	___wmul@multiplier,w
  1124  017D  0471               	iorwf	___wmul@multiplier+1,w
  1125  017E  1D03               	btfss	3,2
  1126  017F  2981               	goto	u27_21
  1127  0180  2982               	goto	u27_20
  1128  0181                     u27_21:	
  1129  0181  2964               	goto	i1l869
  1130  0182                     u27_20:	
  1131  0182                     i1l877:	
  1132  0182  0875               	movf	___wmul@product+1,w
  1133  0183  00F1               	movwf	?___wmul+1
  1134  0184  0874               	movf	___wmul@product,w
  1135  0185  00F0               	movwf	?___wmul
  1136  0186                     i1l187:	
  1137  0186  0008               	return
  1138  0187                     __end_of___wmul:	
  1139                           
  1140                           	psect	text4
  1141  00F9                     __ptext4:	
  1142 ;; *************** function ___awdiv *****************
  1143 ;; Defined at:
  1144 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;  divisor         2    6[COMMON] int 
  1147 ;;  dividend        2    8[COMMON] int 
  1148 ;; Auto vars:     Size  Location     Type
  1149 ;;  quotient        2    2[BANK0 ] int 
  1150 ;;  sign            1    1[BANK0 ] unsigned char 
  1151 ;;  counter         1    0[BANK0 ] unsigned char 
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  2    6[COMMON] int 
  1154 ;; Registers used:
  1155 ;;		wreg, status,2, status,0
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1161 ;;      Params:         4       0       0       0       0
  1162 ;;      Locals:         0       4       0       0       0
  1163 ;;      Temps:          1       0       0       0       0
  1164 ;;      Totals:         5       4       0       0       0
  1165 ;;Total ram usage:        9 bytes
  1166 ;; Hardware stack levels used:    1
  1167 ;; This function calls:
  1168 ;;		Nothing
  1169 ;; This function is called by:
  1170 ;;		_ISR
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           
  1175                           ;psect for function ___awdiv
  1176  00F9                     ___awdiv:	
  1177  00F9                     i1l881:	
  1178                           ;incstack = 0
  1179                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1180                           
  1181  00F9  1283               	bcf	3,5	;RP0=0, select bank0
  1182  00FA  1303               	bcf	3,6	;RP1=0, select bank0
  1183  00FB  01A1               	clrf	___awdiv@sign
  1184  00FC                     i1l883:	
  1185  00FC  1FF7               	btfss	___awdiv@divisor+1,7
  1186  00FD  28FF               	goto	u28_21
  1187  00FE  2900               	goto	u28_20
  1188  00FF                     u28_21:	
  1189  00FF  2907               	goto	i1l889
  1190  0100                     u28_20:	
  1191  0100                     i1l885:	
  1192  0100  09F6               	comf	___awdiv@divisor,f
  1193  0101  09F7               	comf	___awdiv@divisor+1,f
  1194  0102  0AF6               	incf	___awdiv@divisor,f
  1195  0103  1903               	skipnz
  1196  0104  0AF7               	incf	___awdiv@divisor+1,f
  1197  0105                     i1l887:	
  1198  0105  01A1               	clrf	___awdiv@sign
  1199  0106  0AA1               	incf	___awdiv@sign,f
  1200  0107                     i1l889:	
  1201  0107  1FF9               	btfss	___awdiv@dividend+1,7
  1202  0108  290A               	goto	u29_21
  1203  0109  290B               	goto	u29_20
  1204  010A                     u29_21:	
  1205  010A  2914               	goto	i1l895
  1206  010B                     u29_20:	
  1207  010B                     i1l891:	
  1208  010B  09F8               	comf	___awdiv@dividend,f
  1209  010C  09F9               	comf	___awdiv@dividend+1,f
  1210  010D  0AF8               	incf	___awdiv@dividend,f
  1211  010E  1903               	skipnz
  1212  010F  0AF9               	incf	___awdiv@dividend+1,f
  1213  0110                     i1l893:	
  1214  0110  3001               	movlw	1
  1215  0111  00FA               	movwf	??___awdiv
  1216  0112  087A               	movf	??___awdiv,w
  1217  0113  06A1               	xorwf	___awdiv@sign,f
  1218  0114                     i1l895:	
  1219  0114  01A2               	clrf	___awdiv@quotient
  1220  0115  01A3               	clrf	___awdiv@quotient+1
  1221  0116                     i1l897:	
  1222  0116  0876               	movf	___awdiv@divisor,w
  1223  0117  0477               	iorwf	___awdiv@divisor+1,w
  1224  0118  1903               	btfsc	3,2
  1225  0119  291B               	goto	u30_21
  1226  011A  291C               	goto	u30_20
  1227  011B                     u30_21:	
  1228  011B  2953               	goto	i1l917
  1229  011C                     u30_20:	
  1230  011C                     i1l899:	
  1231  011C  01A0               	clrf	___awdiv@counter
  1232  011D  0AA0               	incf	___awdiv@counter,f
  1233  011E  292A               	goto	i1l905
  1234  011F                     i1l901:	
  1235  011F  3001               	movlw	1
  1236  0120                     u31_25:	
  1237  0120  1003               	clrc
  1238  0121  0DF6               	rlf	___awdiv@divisor,f
  1239  0122  0DF7               	rlf	___awdiv@divisor+1,f
  1240  0123  3EFF               	addlw	-1
  1241  0124  1D03               	skipz
  1242  0125  2920               	goto	u31_25
  1243  0126                     i1l903:	
  1244  0126  3001               	movlw	1
  1245  0127  00FA               	movwf	??___awdiv
  1246  0128  087A               	movf	??___awdiv,w
  1247  0129  07A0               	addwf	___awdiv@counter,f
  1248  012A                     i1l905:	
  1249  012A  1FF7               	btfss	___awdiv@divisor+1,7
  1250  012B  292D               	goto	u32_21
  1251  012C  292E               	goto	u32_20
  1252  012D                     u32_21:	
  1253  012D  291F               	goto	i1l901
  1254  012E                     u32_20:	
  1255  012E                     i1l907:	
  1256  012E  3001               	movlw	1
  1257  012F                     u33_25:	
  1258  012F  1003               	clrc
  1259  0130  0DA2               	rlf	___awdiv@quotient,f
  1260  0131  0DA3               	rlf	___awdiv@quotient+1,f
  1261  0132  3EFF               	addlw	-1
  1262  0133  1D03               	skipz
  1263  0134  292F               	goto	u33_25
  1264  0135  0877               	movf	___awdiv@divisor+1,w
  1265  0136  0279               	subwf	___awdiv@dividend+1,w
  1266  0137  1D03               	skipz
  1267  0138  293B               	goto	u34_25
  1268  0139  0876               	movf	___awdiv@divisor,w
  1269  013A  0278               	subwf	___awdiv@dividend,w
  1270  013B                     u34_25:	
  1271  013B  1C03               	skipc
  1272  013C  293E               	goto	u34_21
  1273  013D  293F               	goto	u34_20
  1274  013E                     u34_21:	
  1275  013E  2946               	goto	i1l913
  1276  013F                     u34_20:	
  1277  013F                     i1l909:	
  1278  013F  0876               	movf	___awdiv@divisor,w
  1279  0140  02F8               	subwf	___awdiv@dividend,f
  1280  0141  0877               	movf	___awdiv@divisor+1,w
  1281  0142  1C03               	skipc
  1282  0143  03F9               	decf	___awdiv@dividend+1,f
  1283  0144  02F9               	subwf	___awdiv@dividend+1,f
  1284  0145                     i1l911:	
  1285  0145  1422               	bsf	___awdiv@quotient,0
  1286  0146                     i1l913:	
  1287  0146  3001               	movlw	1
  1288  0147                     u35_25:	
  1289  0147  1003               	clrc
  1290  0148  0CF7               	rrf	___awdiv@divisor+1,f
  1291  0149  0CF6               	rrf	___awdiv@divisor,f
  1292  014A  3EFF               	addlw	-1
  1293  014B  1D03               	skipz
  1294  014C  2947               	goto	u35_25
  1295  014D                     i1l915:	
  1296  014D  3001               	movlw	1
  1297  014E  02A0               	subwf	___awdiv@counter,f
  1298  014F  1D03               	btfss	3,2
  1299  0150  2952               	goto	u36_21
  1300  0151  2953               	goto	u36_20
  1301  0152                     u36_21:	
  1302  0152  292E               	goto	i1l907
  1303  0153                     u36_20:	
  1304  0153                     i1l917:	
  1305  0153  0821               	movf	___awdiv@sign,w
  1306  0154  1903               	btfsc	3,2
  1307  0155  2957               	goto	u37_21
  1308  0156  2958               	goto	u37_20
  1309  0157                     u37_21:	
  1310  0157  295D               	goto	i1l921
  1311  0158                     u37_20:	
  1312  0158                     i1l919:	
  1313  0158  09A2               	comf	___awdiv@quotient,f
  1314  0159  09A3               	comf	___awdiv@quotient+1,f
  1315  015A  0AA2               	incf	___awdiv@quotient,f
  1316  015B  1903               	skipnz
  1317  015C  0AA3               	incf	___awdiv@quotient+1,f
  1318  015D                     i1l921:	
  1319  015D  0823               	movf	___awdiv@quotient+1,w
  1320  015E  00F7               	movwf	?___awdiv+1
  1321  015F  0822               	movf	___awdiv@quotient,w
  1322  0160  00F6               	movwf	?___awdiv
  1323  0161                     i1l338:	
  1324  0161  0008               	return
  1325  0162                     __end_of___awdiv:	
  1326  007E                     btemp	set	126	;btemp
  1327  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80     14      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _main->_initMultiplex

Critical Paths under _ISR in BANK0

    _ISR->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     196
                                             12 BANK0      2     2      0
                      _initMultiplex
 ---------------------------------------------------------------------------------
 (1) _initMultiplex                                        4     0      4     196
                                              8 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  4     4      0     848
                                              4 BANK0      4     4      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     452
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initMultiplex

 _ISR (ROOT)
   ___awdiv
     ___wmul (ARG)
   ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      21       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      E      14       5       25.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      21      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 03 13:10:09 2020

                               pc 0002                       __CFG_CP$OFF 0000                                l84 0058  
                              l97 019A                                l99 01A6                                _d1 0030  
                              _d2 002E                      ___awdiv@sign 0021                                fsr 0004  
             ___wmul@multiplicand 0072                               l861 0198                               l863 019C  
                             l855 0187                               l865 01A5                               l857 018D  
                             l961 001F                               l859 018F                               l971 002E  
                             l963 0023                               l981 0039                               l973 002F  
                             l965 0024                               l991 0042                               l983 003C  
                             l975 0030                               l967 002C                               l993 0043  
                             l985 003D                               l977 0034                               l969 002D  
                             l995 0044                               l987 003E                               l979 0035  
                             l997 0045                               l989 0041                               l999 0046  
                             u230 018D                               u231 018C                               u440 0076  
                             u441 0075                      __CFG_CPD$OFF 0000                               _ISR 008C  
                             u457 005E                               u467 006B                               fsr0 0004  
                    __CFG_LVP$OFF 0000                              ?_ISR 0070                              l1001 0047  
                            l1011 006F                              l1003 004E                              l1013 0076  
                            l1005 0051                              l1015 0083                              l1007 0055  
                            l1017 0086                              l1009 0062                              _IOCB 0096  
                            _PIE1 008C                              _PIR1 000C                              i1l79 00F2  
                            _TMR0 0001                      __CFG_WRT$OFF 0000                              _main 001F  
                            btemp 007E                              start 000E                     __CFG_IESO$OFF 0000  
                           ??_ISR 0024  __end_ofinitMultiplex@SEGMENT_MAP 01BD                             ?_main 0070  
                 __end_of___awdiv 0162                     __CFG_WDTE$OFF 0000                             _ANSEL 0188  
                 ___awdiv@divisor 0076                             i1l185 016E                             i1l338 0161  
                           i1l187 0186                             i1l901 011F                             i1l911 0145  
                           i1l903 0126                             i1l921 015D                             i1l913 0146  
                           i1l905 012A                             i1l915 014D                             i1l907 012E  
                           i1l931 0098                             i1l909 013F                             i1l917 0153  
                           i1l941 00AC                             i1l933 009C                             i1l925 008C  
                           i1l919 0158                             i1l871 0168                             i1l951 00ED  
                           i1l943 00AE                             i1l935 00A0                             i1l927 0094  
                           i1l881 00F9                             i1l873 0175                             i1l953 00EE  
                           i1l945 00B2                             i1l937 00A4                             i1l929 0096  
                           i1l891 010B                             i1l883 00FC                             i1l875 017C  
                           i1l867 0162                             i1l955 00EF                             i1l947 00EB  
                           i1l939 00A8                             i1l893 0110                             i1l885 0100  
                           i1l877 0182                             i1l869 0164                             i1l957 00F0  
                           i1l949 00EC                             i1l895 0114                             i1l887 0105  
                           i1l959 00F1                             i1l897 0116                             i1l889 0107  
                           i1l899 011C                   ___awdiv@counter 0020                             u30_20 011C  
                           u30_21 011B                             u31_25 0120                             u32_20 012E  
                           u24_20 0168                             u40_20 00A0                             u32_21 012D  
                           u24_21 0167                             u40_21 009F                             u41_20 00A8  
                           u41_21 00A7                             u33_25 012F                             u25_25 016F  
                           u34_20 013F                             u42_20 00AC                             u34_21 013E  
                           u42_21 00AB                             u34_25 013B                             u26_25 0176  
                           u27_20 0182                             u43_20 00B2                             u27_21 0181  
                           u43_21 00B1                             _PORTA 0005                             _PORTB 0006  
                           _PORTC 0007                             _PORTD 0008                             u35_25 0147  
                           u36_20 0153                             u28_20 0100                             u36_21 0152  
                           u28_21 00FF                             u37_20 0158                             u29_20 010B  
                           u37_21 0157                             u29_21 010A                             u38_20 0094  
                           u38_21 0093                             u39_20 009C                             u39_21 009B  
                           _TRISA 0085                             _TRISB 0086                             _TRISC 0087  
                           _TRISD 0088                    __CFG_FCMEN$OFF 0000                    __CFG_BOREN$OFF 0000  
                           pclath 000A                             status 0003                             wtemp0 007E  
                  __CFG_MCLRE$OFF 0000                   __initialization 0011                      __end_of_main 008C  
                          ??_main 002C            __size_of_initMultiplex 0020                            _ADCON0 001F  
                          _ADCON1 009F                            _ADRESH 001E                  ___awdiv@dividend 0078  
                          _ANSELH 0189                            _INTCON 000B                    __CFG_PWRTE$OFF 0000  
                          ___wmul 0162                         ??___awdiv 007A                            _change 0033  
                ___awdiv@quotient 0022                            saved_w 007E           __end_of__initialization 001B  
                   _initMultiplex 0187                    __pcstackCOMMON 0070                    _OPTION_REGbits 0081  
                      __pbssBANK0 002E                    ?_initMultiplex 0028                        __pmaintext 001F  
                         ?___wmul 0070                        __pintentry 0004                        __stringtab 01A7  
                         ___awdiv 00F9                   __size_of___wmul 0025                           __ptext1 0187  
                         __ptext2 008C                           __ptext3 0162                           __ptext4 00F9  
                    __size_of_ISR 006D                           _numero_ 007B              end_of_initialization 001B  
                 ??_initMultiplex 002C                         _PORTBbits 0006                         _PORTDbits 0008  
              initMultiplex@valor 0028                         _TRISBbits 0086                    __end_of___wmul 0187  
             start_initialization 0011                       __end_of_ISR 00F9          __CFG_FOSC$INTRC_NOCLKOUT 0000  
                        ??___wmul 0074                       __pbssCOMMON 007B                         ___latbits 0002  
                   __pcstackBANK0 0020          initMultiplex@SEGMENT_MAP 01AD                          ?___awdiv 0076  
                       __pstrings 01A7                         _contador1 0032                 interrupt_function 0004  
                  ___wmul@product 0074                          _IOCBbits 0096                          _PIR1bits 000C  
                      _ADCON0bits 001F                       __stringbase 01AC                 ___wmul@multiplier 0070  
           __end_of_initMultiplex 01A7                  __size_of___awdiv 0069                __end_of__stringtab 01AD  
                      _ANSELHbits 0189                 __CFG_BOR4V$BOR40V 0000                     __size_of_main 006D  
                      _INTCONbits 000B                          intlevel1 0000                         stringcode 01A7  
                      _OPTION_REG 0081                          stringdir 01A7                          stringtab 01A7  
             initMultiplex@valor2 002A  
