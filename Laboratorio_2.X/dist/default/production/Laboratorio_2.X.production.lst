

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Feb 01 22:57:28 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.10
    15                           ; Generated 31/07/2019 GMT
    16                           ; 
    17                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001D                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  0081                     	;# 
   240  0085                     	;# 
   241  0086                     	;# 
   242  0087                     	;# 
   243  0088                     	;# 
   244  0089                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  008E                     	;# 
   248  008F                     	;# 
   249  0090                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0093                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0094                     	;# 
   256  0095                     	;# 
   257  0096                     	;# 
   258  0097                     	;# 
   259  0098                     	;# 
   260  0099                     	;# 
   261  009A                     	;# 
   262  009B                     	;# 
   263  009C                     	;# 
   264  009D                     	;# 
   265  009E                     	;# 
   266  009F                     	;# 
   267  0105                     	;# 
   268  0107                     	;# 
   269  0108                     	;# 
   270  0109                     	;# 
   271  010C                     	;# 
   272  010C                     	;# 
   273  010D                     	;# 
   274  010E                     	;# 
   275  010F                     	;# 
   276  0185                     	;# 
   277  0187                     	;# 
   278  0188                     	;# 
   279  0189                     	;# 
   280  018C                     	;# 
   281  018D                     	;# 
   282                           
   283                           	psect	strings
   284  009F                     __pstrings:	
   285  009F                     stringtab:	
   286  009F                     __stringtab:	
   287  009F                     stringcode:	
   288                           ;	String table - string pointers are 1 byte each
   289                           
   290  009F                     stringdir:	
   291  009F  3000               	movlw	high stringdir
   292  00A0  008A               	movwf	10
   293  00A1  0804               	movf	4,w
   294  00A2  0A84               	incf	4,f
   295  00A3  0782               	addwf	2,f
   296  00A4                     __stringbase:	
   297  00A4  3400               	retlw	0
   298  00A5                     __end_of__stringtab:	
   299  00A5                     initMultiplex@SEGMENT_MAP:	
   300  00A5  343F               	retlw	63
   301  00A6  3406               	retlw	6
   302  00A7  345B               	retlw	91
   303  00A8  344F               	retlw	79
   304  00A9  3466               	retlw	102
   305  00AA  346D               	retlw	109
   306  00AB  347D               	retlw	125
   307  00AC  3407               	retlw	7
   308  00AD  347F               	retlw	127
   309  00AE  346F               	retlw	111
   310  00AF  3477               	retlw	119
   311  00B0  347C               	retlw	124
   312  00B1  3439               	retlw	57
   313  00B2  345E               	retlw	94
   314  00B3  3479               	retlw	121
   315  00B4  3471               	retlw	113
   316  00B5                     __end_ofinitMultiplex@SEGMENT_MAP:	
   317  0008                     _PORTDbits	set	8
   318  0008                     _PORTD	set	8
   319  0007                     _PORTC	set	7
   320  0006                     _PORTB	set	6
   321  000B                     _INTCON	set	11
   322  0005                     _PORTA	set	5
   323  0006                     _PORTBbits	set	6
   324  0001                     _TMR0	set	1
   325  000B                     _INTCONbits	set	11
   326  0096                     _IOCBbits	set	150
   327  0096                     _IOCB	set	150
   328  0081                     _OPTION_REG	set	129
   329  0088                     _TRISD	set	136
   330  0087                     _TRISC	set	135
   331  0086                     _TRISBbits	set	134
   332  0086                     _TRISB	set	134
   333  0085                     _TRISA	set	133
   334  0189                     _ANSELH	set	393
   335  0188                     _ANSEL	set	392
   336                           
   337                           ; #config settings
   338  0000                     
   339                           	psect	cinit
   340  000F                     start_initialization:	
   341  000F                     __initialization:	
   342                           
   343                           ; Clear objects allocated to COMMON
   344  000F  01F5               	clrf	__pbssCOMMON& (0+127)
   345  0010  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   346  0011  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   347  0012                     end_of_initialization:	
   348                           ;End of C runtime variable initialization code
   349                           
   350  0012                     __end_of__initialization:	
   351  0012  0183               	clrf	3
   352  0013  120A  118A  2816   	ljmp	_main	;jump to C main() function
   353                           
   354                           	psect	bssCOMMON
   355  0075                     __pbssCOMMON:	
   356  0075                     _numero_:	
   357  0075                     	ds	2
   358  0077                     _change:	
   359  0077                     	ds	1
   360                           
   361                           	psect	cstackCOMMON
   362  0070                     __pcstackCOMMON:	
   363  0070                     ?_ISR:	
   364  0070                     ??_ISR:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0070                     ?_main:	
   368                           ; 1 bytes @ 0x0
   369                           
   370                           
   371                           ; 1 bytes @ 0x0
   372  0070                     	ds	3
   373  0073                     ?_initMultiplex:	
   374  0073                     initMultiplex@valor:	
   375                           ; 1 bytes @ 0x3
   376                           
   377                           
   378                           ; 2 bytes @ 0x3
   379  0073                     	ds	2
   380  0075                     ??_initMultiplex:	
   381  0075                     ??_main:	
   382                           ; 1 bytes @ 0x5
   383                           
   384                           
   385                           	psect	maintext
   386  0016                     __pmaintext:	
   387                           ; 1 bytes @ 0x5
   388 ;;
   389 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   390 ;;
   391 ;; *************** function _main *****************
   392 ;; Defined at:
   393 ;;		line 59 in file "ADC.c"
   394 ;; Parameters:    Size  Location     Type
   395 ;;		None
   396 ;; Auto vars:     Size  Location     Type
   397 ;;		None
   398 ;; Return value:  Size  Location     Type
   399 ;;                  1    wreg      void 
   400 ;; Registers used:
   401 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   402 ;; Tracked objects:
   403 ;;		On entry : B00/0
   404 ;;		On exit  : 0/0
   405 ;;		Unchanged: 0/0
   406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   407 ;;      Params:         0       0       0       0       0
   408 ;;      Locals:         0       0       0       0       0
   409 ;;      Temps:          0       0       0       0       0
   410 ;;      Totals:         0       0       0       0       0
   411 ;;Total ram usage:        0 bytes
   412 ;; Hardware stack levels required when called:    3
   413 ;; This function calls:
   414 ;;		_initMultiplex
   415 ;; This function is called by:
   416 ;;		Startup code after reset
   417 ;; This function uses a non-reentrant model
   418 ;;
   419                           
   420                           
   421                           ;psect for function _main
   422  0016                     _main:	
   423  0016                     l752:	
   424                           ;incstack = 0
   425                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   426                           
   427                           
   428                           ;ADC.c: 60:     TRISA = 0;
   429  0016  1683               	bsf	3,5	;RP0=1, select bank1
   430  0017  1303               	bcf	3,6	;RP1=0, select bank1
   431  0018  0185               	clrf	5	;volatile
   432                           
   433                           ;ADC.c: 61:     TRISB = 0;
   434  0019  0186               	clrf	6	;volatile
   435  001A                     l754:	
   436                           
   437                           ;ADC.c: 62:     TRISBbits.TRISB0 = 1;
   438  001A  1406               	bsf	6,0	;volatile
   439  001B                     l756:	
   440                           
   441                           ;ADC.c: 63:     TRISBbits.TRISB1 = 1;
   442  001B  1486               	bsf	6,1	;volatile
   443                           
   444                           ;ADC.c: 64:     TRISC = 0;
   445  001C  0187               	clrf	7	;volatile
   446                           
   447                           ;ADC.c: 65:     TRISD = 0;
   448  001D  0188               	clrf	8	;volatile
   449                           
   450                           ;ADC.c: 67:     ANSEL = 0;
   451  001E  1683               	bsf	3,5	;RP0=1, select bank3
   452  001F  1703               	bsf	3,6	;RP1=1, select bank3
   453  0020  0188               	clrf	8	;volatile
   454                           
   455                           ;ADC.c: 68:     ANSELH = 0;
   456  0021  0189               	clrf	9	;volatile
   457                           
   458                           ;ADC.c: 70:     INTCON = 0;
   459  0022  018B               	clrf	11	;volatile
   460  0023                     l758:	
   461                           
   462                           ;ADC.c: 71:     INTCONbits.GIE = 1;
   463  0023  178B               	bsf	11,7	;volatile
   464  0024                     l760:	
   465                           
   466                           ;ADC.c: 72:     INTCONbits.RBIE = 1;
   467  0024  158B               	bsf	11,3	;volatile
   468  0025                     l762:	
   469                           
   470                           ;ADC.c: 73:     INTCONbits.RBIF = 0;
   471  0025  100B               	bcf	11,0	;volatile
   472  0026                     l764:	
   473                           
   474                           ;ADC.c: 74:     INTCONbits.T0IE = 1;
   475  0026  168B               	bsf	11,5	;volatile
   476  0027                     l766:	
   477                           
   478                           ;ADC.c: 75:     INTCONbits.T0IF = 0;
   479  0027  110B               	bcf	11,2	;volatile
   480                           
   481                           ;ADC.c: 77:     OPTION_REG = 0;
   482  0028  1683               	bsf	3,5	;RP0=1, select bank1
   483  0029  1303               	bcf	3,6	;RP1=0, select bank1
   484  002A  0181               	clrf	1	;volatile
   485  002B                     l768:	
   486                           
   487                           ;ADC.c: 79:     TMR0 = 4;
   488  002B  3004               	movlw	4
   489  002C  1283               	bcf	3,5	;RP0=0, select bank0
   490  002D  1303               	bcf	3,6	;RP1=0, select bank0
   491  002E  0081               	movwf	1	;volatile
   492  002F                     l770:	
   493                           
   494                           ;ADC.c: 81:     IOCB = 0;
   495  002F  1683               	bsf	3,5	;RP0=1, select bank1
   496  0030  1303               	bcf	3,6	;RP1=0, select bank1
   497  0031  0196               	clrf	22	;volatile
   498  0032                     l772:	
   499                           
   500                           ;ADC.c: 82:     IOCBbits.IOCB0 = 1;
   501  0032  1416               	bsf	22,0	;volatile
   502  0033                     l774:	
   503                           
   504                           ;ADC.c: 83:     IOCBbits.IOCB1 = 1;
   505  0033  1496               	bsf	22,1	;volatile
   506  0034                     l776:	
   507                           
   508                           ;ADC.c: 85:     PORTA = 0;
   509  0034  1283               	bcf	3,5	;RP0=0, select bank0
   510  0035  1303               	bcf	3,6	;RP1=0, select bank0
   511  0036  0185               	clrf	5	;volatile
   512  0037                     l778:	
   513                           
   514                           ;ADC.c: 86:     PORTB = 0;
   515  0037  0186               	clrf	6	;volatile
   516  0038                     l780:	
   517                           
   518                           ;ADC.c: 87:     PORTC = 0;
   519  0038  0187               	clrf	7	;volatile
   520  0039                     l782:	
   521                           
   522                           ;ADC.c: 88:     PORTD = 0;
   523  0039  0188               	clrf	8	;volatile
   524  003A                     l784:	
   525                           
   526                           ;ADC.c: 91:         if(change == 1){
   527  003A  0377               	decf	_change,w
   528  003B  1D03               	btfss	3,2
   529  003C  283E               	goto	u91
   530  003D  283F               	goto	u90
   531  003E                     u91:	
   532  003E  283A               	goto	l784
   533  003F                     u90:	
   534  003F                     l786:	
   535                           
   536                           ;ADC.c: 92:             initMultiplex(numero_);
   537  003F  3000               	movlw	0
   538  0040  00F3               	movwf	initMultiplex@valor
   539  0041  00F4               	movwf	initMultiplex@valor+1
   540  0042  120A  118A  207F  120A  118A  	fcall	_initMultiplex
   541  0047                     l788:	
   542                           
   543                           ;ADC.c: 93:             change = 0;
   544  0047  01F7               	clrf	_change
   545  0048  283A               	goto	l784
   546  0049  120A  118A  280C   	ljmp	start
   547  004C                     __end_of_main:	
   548                           
   549                           	psect	text1
   550  007F                     __ptext1:	
   551 ;; *************** function _initMultiplex *****************
   552 ;; Defined at:
   553 ;;		line 5 in file "Multiplexar.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;  valor           2    3[COMMON] unsigned int 
   556 ;; Auto vars:     Size  Location     Type
   557 ;;		None
   558 ;; Return value:  Size  Location     Type
   559 ;;                  1    wreg      void 
   560 ;; Registers used:
   561 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   562 ;; Tracked objects:
   563 ;;		On entry : 0/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   567 ;;      Params:         2       0       0       0       0
   568 ;;      Locals:         0       0       0       0       0
   569 ;;      Temps:          0       0       0       0       0
   570 ;;      Totals:         2       0       0       0       0
   571 ;;Total ram usage:        2 bytes
   572 ;; Hardware stack levels used:    2
   573 ;; Hardware stack levels required when called:    1
   574 ;; This function calls:
   575 ;;		Nothing
   576 ;; This function is called by:
   577 ;;		_main
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           
   581                           
   582                           ;psect for function _initMultiplex
   583  007F                     _initMultiplex:	
   584  007F                     l740:	
   585                           ;incstack = 0
   586                           ; Regs used in _initMultiplex: [wreg-fsr0h+status,2+status,0+pclath]
   587                           
   588                           
   589                           ;Multiplexar.c: 6:     unsigned char const SEGMENT_MAP[16] = {0x3F, 0x06, 0x5B, 0x4F, 0x
      +                          66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F, 0x77, 0x7C, 0X39, 0X5E, 0X79, 0X71};;Multiplexar.c: 7:
      +                                       if(PORTDbits.RD0 == 1){
   590  007F  1283               	bcf	3,5	;RP0=0, select bank0
   591  0080  1303               	bcf	3,6	;RP1=0, select bank0
   592  0081  1C08               	btfss	8,0	;volatile
   593  0082  2884               	goto	u81
   594  0083  2885               	goto	u80
   595  0084                     u81:	
   596  0084  2892               	goto	l68
   597  0085                     u80:	
   598  0085                     l742:	
   599                           
   600                           ;Multiplexar.c: 8:                 PORTDbits.RD0 = 0;
   601  0085  1008               	bcf	8,0	;volatile
   602                           
   603                           ;Multiplexar.c: 9:                 PORTDbits.RD1 = 0;
   604  0086  1088               	bcf	8,1	;volatile
   605  0087                     l744:	
   606                           
   607                           ;Multiplexar.c: 10:                 PORTC = SEGMENT_MAP[valor];
   608  0087  0873               	movf	initMultiplex@valor,w
   609  0088  3E01               	addlw	low ((initMultiplex@SEGMENT_MAP-__stringbase)| (0+32768))
   610  0089  0084               	movwf	4
   611  008A  120A  118A  209F  120A  118A  	fcall	stringdir
   612  008F  0087               	movwf	7	;volatile
   613  0090                     l746:	
   614                           
   615                           ;Multiplexar.c: 11:                 PORTDbits.RD1 = 1;
   616  0090  1488               	bsf	8,1	;volatile
   617                           
   618                           ;Multiplexar.c: 12:             }else {
   619  0091  289E               	goto	l70
   620  0092                     l68:	
   621                           
   622                           ;Multiplexar.c: 13:                 PORTDbits.RD1 = 0;
   623  0092  1088               	bcf	8,1	;volatile
   624                           
   625                           ;Multiplexar.c: 14:                 PORTDbits.RD0 = 0;
   626  0093  1008               	bcf	8,0	;volatile
   627  0094                     l748:	
   628                           
   629                           ;Multiplexar.c: 15:                 PORTC = SEGMENT_MAP[valor];
   630  0094  0873               	movf	initMultiplex@valor,w
   631  0095  3E01               	addlw	low ((initMultiplex@SEGMENT_MAP-__stringbase)| (0+32768))
   632  0096  0084               	movwf	4
   633  0097  120A  118A  209F  120A  118A  	fcall	stringdir
   634  009C  0087               	movwf	7	;volatile
   635  009D                     l750:	
   636                           
   637                           ;Multiplexar.c: 16:                 PORTDbits.RD0 = 1;
   638  009D  1408               	bsf	8,0	;volatile
   639  009E                     l70:	
   640  009E  0008               	return
   641  009F                     __end_of_initMultiplex:	
   642                           
   643                           	psect	text2
   644  004C                     __ptext2:	
   645 ;; *************** function _ISR *****************
   646 ;; Defined at:
   647 ;;		line 38 in file "ADC.c"
   648 ;; Parameters:    Size  Location     Type
   649 ;;		None
   650 ;; Auto vars:     Size  Location     Type
   651 ;;		None
   652 ;; Return value:  Size  Location     Type
   653 ;;                  1    wreg      void 
   654 ;; Registers used:
   655 ;;		wreg, status,2, status,0
   656 ;; Tracked objects:
   657 ;;		On entry : 0/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   661 ;;      Params:         0       0       0       0       0
   662 ;;      Locals:         0       0       0       0       0
   663 ;;      Temps:          3       0       0       0       0
   664 ;;      Totals:         3       0       0       0       0
   665 ;;Total ram usage:        3 bytes
   666 ;; Hardware stack levels used:    1
   667 ;; This function calls:
   668 ;;		Nothing
   669 ;; This function is called by:
   670 ;;		Interrupt level 1
   671 ;; This function uses a non-reentrant model
   672 ;;
   673                           
   674                           
   675                           ;psect for function _ISR
   676  004C                     _ISR:	
   677  004C                     i1l674:	
   678                           
   679                           ;ADC.c: 39:     INTCONbits.GIE = 0;
   680  004C  138B               	bcf	11,7	;volatile
   681                           
   682                           ;ADC.c: 40:     INTCONbits.RBIE = 0;
   683  004D  118B               	bcf	11,3	;volatile
   684                           
   685                           ;ADC.c: 41:     INTCONbits.T0IE = 0;
   686  004E  128B               	bcf	11,5	;volatile
   687                           
   688                           ;ADC.c: 42:     if(INTCONbits.T0IF == 1){
   689  004F  1D0B               	btfss	11,2	;volatile
   690  0050  2852               	goto	u2_21
   691  0051  2853               	goto	u2_20
   692  0052                     u2_21:	
   693  0052  2859               	goto	i1l680
   694  0053                     u2_20:	
   695  0053                     i1l676:	
   696                           
   697                           ;ADC.c: 43:         TMR0 = 4;
   698  0053  3004               	movlw	4
   699  0054  1283               	bcf	3,5	;RP0=0, select bank0
   700  0055  1303               	bcf	3,6	;RP1=0, select bank0
   701  0056  0081               	movwf	1	;volatile
   702  0057                     i1l678:	
   703                           
   704                           ;ADC.c: 44:         change = 1;
   705  0057  01F7               	clrf	_change
   706  0058  0AF7               	incf	_change,f
   707  0059                     i1l680:	
   708                           
   709                           ;ADC.c: 46:     if(INTCONbits.RBIF == 1 && PORTBbits.RB0 == 1){
   710  0059  1C0B               	btfss	11,0	;volatile
   711  005A  285C               	goto	u3_21
   712  005B  285D               	goto	u3_20
   713  005C                     u3_21:	
   714  005C  2867               	goto	i1l686
   715  005D                     u3_20:	
   716  005D                     i1l682:	
   717  005D  1283               	bcf	3,5	;RP0=0, select bank0
   718  005E  1303               	bcf	3,6	;RP1=0, select bank0
   719  005F  1C06               	btfss	6,0	;volatile
   720  0060  2862               	goto	u4_21
   721  0061  2863               	goto	u4_20
   722  0062                     u4_21:	
   723  0062  2867               	goto	i1l686
   724  0063                     u4_20:	
   725  0063                     i1l684:	
   726                           
   727                           ;ADC.c: 47:         PORTA++;
   728  0063  3001               	movlw	1
   729  0064  00F0               	movwf	??_ISR
   730  0065  0870               	movf	??_ISR,w
   731  0066  0785               	addwf	5,f	;volatile
   732  0067                     i1l686:	
   733                           
   734                           ;ADC.c: 49:     if(INTCONbits.RBIF == 1 && PORTBbits.RB1 == 1){
   735  0067  1C0B               	btfss	11,0	;volatile
   736  0068  286A               	goto	u5_21
   737  0069  286B               	goto	u5_20
   738  006A                     u5_21:	
   739  006A  2873               	goto	i1l692
   740  006B                     u5_20:	
   741  006B                     i1l688:	
   742  006B  1283               	bcf	3,5	;RP0=0, select bank0
   743  006C  1303               	bcf	3,6	;RP1=0, select bank0
   744  006D  1C86               	btfss	6,1	;volatile
   745  006E  2870               	goto	u6_21
   746  006F  2871               	goto	u6_20
   747  0070                     u6_21:	
   748  0070  2873               	goto	i1l692
   749  0071                     u6_20:	
   750  0071                     i1l690:	
   751                           
   752                           ;ADC.c: 50:         PORTA--;
   753  0071  3001               	movlw	1
   754  0072  0285               	subwf	5,f	;volatile
   755  0073                     i1l692:	
   756                           
   757                           ;ADC.c: 52:     INTCONbits.GIE = 1;
   758  0073  178B               	bsf	11,7	;volatile
   759  0074                     i1l694:	
   760                           
   761                           ;ADC.c: 53:     INTCONbits.RBIE = 1;
   762  0074  158B               	bsf	11,3	;volatile
   763  0075                     i1l696:	
   764                           
   765                           ;ADC.c: 54:     INTCONbits.RBIF = 0;
   766  0075  100B               	bcf	11,0	;volatile
   767  0076                     i1l698:	
   768                           
   769                           ;ADC.c: 55:     INTCONbits.T0IE = 1;
   770  0076  168B               	bsf	11,5	;volatile
   771  0077                     i1l700:	
   772                           
   773                           ;ADC.c: 56:     INTCONbits.T0IF = 0;
   774  0077  110B               	bcf	11,2	;volatile
   775  0078                     i1l50:	
   776  0078  0872               	movf	??_ISR+2,w
   777  0079  008A               	movwf	10
   778  007A  0E71               	swapf	(??_ISR+1)^(0+4294967168),w
   779  007B  0083               	movwf	3
   780  007C  0EFE               	swapf	btemp,f
   781  007D  0E7E               	swapf	btemp,w
   782  007E  0009               	retfie
   783  007F                     __end_of_ISR:	
   784  007E                     btemp	set	126	;btemp
   785  007E                     wtemp0	set	126
   786                           
   787                           	psect	intentry
   788  0004                     __pintentry:	
   789                           ;incstack = 0
   790                           ; Regs used in _ISR: [wreg+status,2+status,0]
   791                           
   792  0004                     interrupt_function:	
   793  007E                     saved_w	set	btemp
   794  0004  00FE               	movwf	btemp
   795  0005  0E03               	swapf	3,w
   796  0006  00F1               	movwf	??_ISR+1
   797  0007  080A               	movf	10,w
   798  0008  00F2               	movwf	??_ISR+2
   799  0009  120A  118A  284C   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_initMultiplex

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     120
                      _initMultiplex
 ---------------------------------------------------------------------------------
 (2) _initMultiplex                                        2     0      2     120
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initMultiplex

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Feb 01 22:57:28 2020

                               pc 0002                       __CFG_CP$OFF 0000                                l70 009E  
                              l68 0092                                u80 0085                                u81 0084  
                              u90 003F                                u91 003E                                fsr 0004  
                             l740 007F                               l750 009D                               l742 0085  
                             l744 0087                               l760 0024                               l752 0016  
                             l746 0090                               l770 002F                               l762 0025  
                             l754 001A                               l748 0094                               l780 0038  
                             l772 0032                               l764 0026                               l756 001B  
                             l782 0039                               l774 0033                               l766 0027  
                             l758 0023                               l784 003A                               l776 0034  
                             l768 002B                               l786 003F                               l778 0037  
                             l788 0047                      __CFG_CPD$OFF 0000                               _ISR 004C  
                             fsr0 0004                      __CFG_LVP$OFF 0000                              ?_ISR 0070  
                            _IOCB 0096                              i1l50 0078                              _TMR0 0001  
                            u2_20 0053                              u2_21 0052                              u3_20 005D  
                            u3_21 005C                              u4_20 0063                              u4_21 0062  
                            u5_20 006B                              u5_21 006A                              u6_20 0071  
                            u6_21 0070                      __CFG_WRT$OFF 0000                              _main 0016  
                            btemp 007E                              start 000C                     __CFG_IESO$OFF 0000  
                           ??_ISR 0070  __end_ofinitMultiplex@SEGMENT_MAP 00B5                             ?_main 0070  
                   __CFG_WDTE$OFF 0000                             _ANSEL 0188                             i1l700 0077  
                           i1l680 0059                             i1l690 0071                             i1l682 005D  
                           i1l674 004C                             i1l692 0073                             i1l684 0063  
                           i1l676 0053                             i1l694 0074                             i1l686 0067  
                           i1l678 0057                             i1l696 0075                             i1l688 006B  
                           i1l698 0076                             _PORTA 0005                             _PORTB 0006  
                           _PORTC 0007                             _PORTD 0008                             _TRISA 0085  
                           _TRISB 0086                             _TRISC 0087                             _TRISD 0088  
                  __CFG_FCMEN$OFF 0000                    __CFG_BOREN$OFF 0000                             pclath 000A  
                           status 0003                             wtemp0 007E                    __CFG_MCLRE$OFF 0000  
                 __initialization 000F                      __end_of_main 004C                            ??_main 0075  
          __size_of_initMultiplex 0020                            _ANSELH 0189                            _INTCON 000B  
                  __CFG_PWRTE$OFF 0000                            _change 0077                            saved_w 007E  
         __end_of__initialization 0012                     _initMultiplex 007F                    __pcstackCOMMON 0070  
                  ?_initMultiplex 0073                        __pmaintext 0016                        __pintentry 0004  
                      __stringtab 009F                           __ptext1 007F                           __ptext2 004C  
                    __size_of_ISR 0033                           _numero_ 0075              end_of_initialization 0012  
                 ??_initMultiplex 0075                         _PORTBbits 0006                         _PORTDbits 0008  
              initMultiplex@valor 0073                         _TRISBbits 0086               start_initialization 000F  
                     __end_of_ISR 007F          __CFG_FOSC$INTRC_NOCLKOUT 0000                       __pbssCOMMON 0075  
                       ___latbits 0002          initMultiplex@SEGMENT_MAP 00A5                         __pstrings 009F  
               interrupt_function 0004                          _IOCBbits 0096                       __stringbase 00A4  
           __end_of_initMultiplex 009F                __end_of__stringtab 00A5                 __CFG_BOR4V$BOR40V 0000  
                   __size_of_main 0036                        _INTCONbits 000B                          intlevel1 0000  
                       stringcode 009F                        _OPTION_REG 0081                          stringdir 009F  
                        stringtab 009F  
